Search.setIndex({"docnames": ["api", "contributing", "index", "install", "lys_/canvas", "lys_/core", "lys_/filters", "lys_/filters.filter", "lys_/fitting", "lys_/functions", "lys_/glb", "lys_/graph/Annotation", "lys_/graph/AnnotationData", "lys_/graph/Area", "lys_/graph/Axes", "lys_/graph/AxisLabels", "lys_/graph/CanvasBase", "lys_/graph/Contour", "lys_/graph/CrossAnnot", "lys_/graph/Data", "lys_/graph/Events", "lys_/graph/Image", "lys_/graph/Legend", "lys_/graph/Line", "lys_/graph/LineAnnot", "lys_/graph/RGB", "lys_/graph/RectAnnot", "lys_/graph/RegionAnnot", "lys_/graph/TextAnnot", "lys_/graph/Vector", "lys_/graph/WaveData", "lys_/multicut", "lys_/widgets", "lys_/widgets/fileview", "lys_/widgets/mdi", "lys_/widgets/table", "tutorials/GUI", "tutorials/animation", "tutorials/cells3d", "tutorials/cui", "tutorials/fitting", "tutorials/introduction", "tutorials/loadVector", "tutorials/mcut", "tutorials/newFilter", "tutorials/newLoader", "tutorials/shell", "tutorials/test", "tutorials/tutorial", "tutorials/variousData", "tutorials/visualization"], "filenames": ["api.rst", "contributing.rst", "index.rst", "install.rst", "lys_/canvas.rst", "lys_/core.rst", "lys_/filters.rst", "lys_/filters.filter.rst", "lys_/fitting.rst", "lys_/functions.rst", "lys_/glb.rst", "lys_/graph/Annotation.rst", "lys_/graph/AnnotationData.rst", "lys_/graph/Area.rst", "lys_/graph/Axes.rst", "lys_/graph/AxisLabels.rst", "lys_/graph/CanvasBase.rst", "lys_/graph/Contour.rst", "lys_/graph/CrossAnnot.rst", "lys_/graph/Data.rst", "lys_/graph/Events.rst", "lys_/graph/Image.rst", "lys_/graph/Legend.rst", "lys_/graph/Line.rst", "lys_/graph/LineAnnot.rst", "lys_/graph/RGB.rst", "lys_/graph/RectAnnot.rst", "lys_/graph/RegionAnnot.rst", "lys_/graph/TextAnnot.rst", "lys_/graph/Vector.rst", "lys_/graph/WaveData.rst", "lys_/multicut.rst", "lys_/widgets.rst", "lys_/widgets/fileview.rst", "lys_/widgets/mdi.rst", "lys_/widgets/table.rst", "tutorials/GUI.rst", "tutorials/animation.rst", "tutorials/cells3d.rst", "tutorials/cui.rst", "tutorials/fitting.rst", "tutorials/introduction.rst", "tutorials/loadVector.rst", "tutorials/mcut.rst", "tutorials/newFilter.rst", "tutorials/newLoader.rst", "tutorials/shell.rst", "tutorials/test.rst", "tutorials/tutorial.rst", "tutorials/variousData.rst", "tutorials/visualization.rst"], "titles": ["Python API", "Contributing", "lys documentation", "Installation", "lysCanvas", "core module", "filters module", "Filters in lys.filters", "fitting module", "functions module", "glb module", "Annotation module", "AnnotationData module", "Area module", "Axes module", "AxisLabel module", "CanvasBase module", "Contour module", "CrossAnnotation module", "Data module", "Events module", "Image module", "Legend module", "Line module", "LineAnnotation module", "RGB module", "RectAnnotation module", "RegionAnnotation module", "TextAnnotation module", "Vector module", "WaveData module", "multicut module", "widgets module", "FileView", "LysSubWindow", "lysTable", "Customizing GUIs", "Advanced usage of MultiCut", "Display cells3d data in scikit-image", "Use lys as Python interpreter", "Fitting", "Introduction", "Copy graphs from lys to vector graphics software", "Interactive GUI analysis system MultiCut", "Adding your original filter", "Loading your file", "Understanding shell in lys", "Automated test", "Tutorial", "Displaying various data types", "Display graphs in lys"], "terms": {"ly": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48], "packag": 9, "core": [0, 3, 35, 44, 50], "modul": [0, 4, 39, 43, 44, 45, 46], "daskwav": [5, 6, 9, 31, 44, 45], "ax": [4, 5, 6, 7, 8, 16, 28, 31, 32, 35, 40, 43, 44, 49, 50], "comput": [2, 3, 5, 41, 48], "data": [2, 5, 6, 7, 9, 14, 16, 20, 21, 23, 25, 28, 29, 30, 31, 32, 35, 37, 41, 42, 43, 44, 48], "duplic": [5, 44, 49], "initwork": 5, "note": [1, 3, 5, 7, 23, 37, 38, 40, 44, 49], "persist": 5, "settingdict": 5, "save": [2, 5, 6, 9, 10, 12, 16, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 44], "wave": [4, 5, 6, 7, 9, 16, 17, 19, 21, 23, 25, 29, 30, 31, 35, 40, 44, 45, 49, 50], "name": [3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 22, 28, 30, 31, 32, 34, 36, 40, 43, 45, 46], "supportedformat": 5, "export": [2, 5, 34, 43, 48], "importfrom": 5, "modifi": [2, 5, 16, 30, 35, 44, 50], "updat": [1, 3, 5, 16, 31, 35, 43], "waveax": 5, "axisisvalid": 14, "getaxi": [5, 12, 30, 32], "pointtopo": 5, "postopoint": 5, "wavebas": [], "x": [5, 7, 8, 11, 18, 21, 22, 23, 26, 28, 30, 38, 40, 43, 44, 49, 50], "y": [5, 7, 8, 11, 18, 21, 22, 23, 26, 28, 30, 38, 40, 49, 50], "z": [5, 7, 12, 30, 38], "wavenot": 5, "function": [0, 4, 5, 7, 10, 31, 34, 35, 36, 41, 44, 45, 46, 48, 49], "append": [4, 6, 9, 19, 21, 23, 25, 29, 30, 40, 43, 49, 50], "displai": [9, 13, 14, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 39, 40, 41, 43, 45, 48], "edit": [2, 9, 28, 35, 36, 41, 43, 44, 50], "frontcanva": [9, 31], "home": [3, 9], "load": [5, 6, 9, 10, 12, 16, 23, 30, 31, 34, 35, 36, 37, 38, 40, 43, 46, 48, 50], "loadablefil": 9, "multicut": [0, 5, 9, 38, 41, 44, 45, 48, 50], "registerfileload": [9, 45], "registerfittingfunct": [8, 9, 40], "glb": [0, 9, 33, 36, 46], "createmainwindow": [], "mainwindow": [10, 33, 36], "restoreworkspac": [], "shell": [3, 39, 48], "fileview": [10, 32, 45], "widget": [0, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 44], "canvasinterfac": [], "base": [2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43], "class": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 44, 46, 50], "canva": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "canvasbas": [4, 9, 11, 13, 14, 15, 22], "event": [4, 10, 34], "compon": 49, "area": [4, 16, 34, 50], "axislabel": [4, 16], "annot": [4, 12, 16, 18, 24, 26, 27, 28, 31, 38, 43], "interfac": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44], "wavedata": [4, 17, 19, 21, 23, 25, 29], "line": [4, 7, 11, 12, 17, 18, 19, 24, 26, 27, 28, 30, 31, 36, 38, 39, 40, 44, 45, 46, 48, 50], "imag": [3, 4, 7, 16, 19, 25, 30, 37, 41, 43, 44, 48, 50], "rgb": [4, 17, 19, 23, 30, 48, 50], "vector": [2, 4, 7, 9, 16, 19, 30, 44, 48, 50], "contour": [4, 9, 19, 30, 48, 50], "annotationdata": [4, 11, 18, 24, 26, 27, 28], "textannot": [4, 11], "lineannot": [4, 11], "regionannot": [4, 11], "crossannot": [4, 11], "rectannot": [4, 11], "analysi": [2, 31, 41, 44, 48, 50], "subpackag": [], "multicutgui": 31, "submodul": [], "animationtab": [], "cuttab": [], "exportdatatab": [], "prefiltertab": [], "content": [16, 31, 35, 39, 43], "executorlist": [], "disabl": [14, 32], "disableat": [], "enabl": [3, 5, 7, 9, 14, 21, 32, 33, 34, 37, 42, 43, 45, 46], "enableat": [], "getfreelin": 31, "graphremov": [], "isen": [], "makewav": [], "remov": [7, 11, 19, 31], "restoreenabledst": [], "saveenabledst": [], "setsumtyp": 31, "set": [5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 49, 50], "switchableobject": [], "controlledobject": [], "clear": [6, 14, 19, 31, 37], "getax": 32, "getobjectsandax": [], "removeat": [], "multicutexecutor": [], "allexecutor": [], "defaultexecutor": [], "freelineexecutor": [], "id": [], "getfilt": [6, 30], "getposit": [18, 24, 26, 28], "getwidth": [17, 23, 27, 29], "setposit": [18, 24, 28], "setwidth": [17, 23, 27, 29], "freelineexecutordialog": [], "accept": [33, 44], "copi": [33, 37, 40, 43, 45, 48, 50], "past": [40, 42, 45, 50], "reject": [], "pointexecutor": [], "pointexecutordialog": [], "regionexecutor": [], "getrang": [], "setrang": [], "regionexecutordialog": [], "gridattachedwindow": [], "closeev": [10, 34, 35], "forceclos": [], "keypress": [20, 35], "usedask": 31, "multiplegrid": [], "itematposit": [], "setsiz": [], "basicwidget": [], "fit": [0, 2, 9, 48], "fittingwidget": [], "lineprofil": [], "fittingwindow": [], "graphwindow": 4, "filter": [0, 19, 30, 31, 32, 33, 38, 48], "commonwidget": [], "convolut": [7, 32], "dask": [2, 3, 5, 7, 37, 41, 48], "differenti": 7, "filterinterfac": [6, 7, 30, 44], "findpeak": [], "freelin": 7, "frequenc": [7, 8], "integr": [2, 7, 8, 31, 43], "interpor": 7, "matrixmath": 7, "region": [7, 11, 14, 18, 26, 27, 31, 32, 43, 48], "resiz": [7, 34], "segment": 7, "shift": 7, "simplemath": 7, "smooth": [2, 7, 37, 38, 43], "transform": [2, 7, 28], "filteriogui": [], "filtermanag": [], "filtersgui": 6, "filtersdialog": [], "appli": [2, 6, 7, 30, 31, 37, 38, 40, 44], "setfilt": [6, 19, 30], "setdimens": [6, 32], "python": [2, 3, 5, 10, 36, 40, 41, 42, 44, 45, 46, 48], "api": [1, 2], "controlledobjectsmodel": [], "columncount": [], "headerdata": [], "parent": [5, 6, 11, 16, 32, 34, 35], "rowcount": [], "findaxisfromcanva": [], "getexecutorlist": [], "gettargetcanva": [], "make": [1, 3, 6, 36, 40, 49], "typic": 9, "typical2d": [], "typical3d": [], "typical4d": [], "typical5d": [], "switchablemodel": [], "controlledexecutorsgui": [], "buildcontextmenu": [], "sizehint": [], "controlledwavesgui": [], "filterappli": 31, "setwav": [], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 44, 47], "obj": [6, 10, 19, 31], "graph": [9, 10, 14, 16, 19, 31, 34, 37, 38, 39, 40, 41, 43, 48, 49], "none": [5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 19, 23, 28, 30, 31, 32, 35], "index": [5, 6, 7], "i": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50], "wave_orig": [], "sumtyp": [6, 7, 31], "parentwidget": [], "qobject": [5, 10, 16, 31, 35], "axi": [5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 40, 43, 50], "slice": [7, 35], "sumlist": [], "ignor": [9, 10, 31], "po": [5, 11, 15, 18, 21, 24, 25, 26, 28, 31, 32], "width": [7, 11, 12, 13, 14, 17, 21, 23, 26, 27, 29, 31, 43, 49, 50], "1": [3, 4, 5, 7, 8, 9, 10, 13, 14, 19, 21, 23, 31, 32, 38, 39, 40, 43, 44, 49, 50], "arg": [6, 9, 31, 32, 44], "kwarg": [6, 9, 31, 32, 33, 44], "w": [5, 7, 35, 36, 45, 50], "lyssubwindow": 32, "rang": [7, 13, 14, 21, 25, 28, 31, 32, 37, 38, 43, 45, 50], "titl": 34, "reimplement": [10, 32, 34, 35], "qmdisubwindow": 34, "e": [3, 7, 10, 33, 35], "file": [2, 5, 6, 9, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 48, 50], "h": 8, "j": 44, "size": [5, 7, 11, 13, 15, 21, 22, 23, 25, 26, 28, 32, 38, 49], "executor": [], "qgroupbox": [], "qabstractitemmodel": [], "self": [34, 35, 44], "qmodelindex": [], "int": [5, 6, 7, 12, 15, 22, 28, 30, 31, 32, 35, 44], "role": 41, "qt": [2, 4, 6, 33, 36, 44], "itemdatarol": [], "displayrol": [], "ani": [5, 6, 7, 9, 10, 31, 37], "orient": [11, 24, 27, 31], "grid": 31, "qwidget": [6, 32, 33, 34, 35], "wid": 31, "qrect": [], "qregion": [], "qtreeview": [], "qsize": [], "dispfunc": [], "appendfunc": [], "axesselectiondialog": 32, "axischecklayout": 32, "getcheck": 32, "setcheck": 32, "statechang": 32, "axisselectionlayout": 32, "setaxi": 32, "oddspinbox": [], "valchang": [], "regionselectwidget": 32, "getregion": [26, 27, 32], "loadclick": [], "setregion": [26, 27, 32], "spinboxoveron": [], "kernelsigmalayout": 32, "getkernelsigma": 32, "setkernelsigma": 32, "kernelsizelayout": 32, "getkernels": 32, "setkernels": 32, "laplacianconvfilt": 7, "prewittfilt": 7, "sobelfilt": 7, "rechunkfilt": 7, "getparamet": [6, 7, 44], "gradientfilt": 7, "laplacianfilt": 7, "nablafilt": 7, "getrelativedimens": [6, 7, 44], "peakfilt": [], "peakpostfilt": [], "peakreorderfilt": [], "freelinefilt": 7, "map": [19, 25, 32, 49], "bandpassfilt": 7, "bandstopfilt": 7, "fourierfilt": 7, "highpassfilt": 7, "lowpassfilt": 7, "integralallfilt": [6, 7], "integralcirclefilt": 7, "integralfilt": 7, "interpfilt": 7, "indexmathfilt": 7, "selectindexfilt": 7, "slicefilt": 7, "transposefilt": 7, "maskfilt": [], "normalizefilt": 7, "referencenormalizefilt": 7, "referenceshiftfilt": [], "selectregionfilt": 7, "paddingfilt": 7, "reducesizefilt": 7, "adaptivethresholdfilt": 7, "thresholdfilt": 7, "reflectfilt": 7, "reversefilt": 7, "rollfilt": 7, "shiftfilt": 7, "complexfilt": 7, "nantonumfilt": 7, "phasefilt": 7, "simplemathfilt": 7, "averagefilt": 7, "gaussianfilt": 7, "medianfilt": 7, "removeimpulsivenois": 7, "axisshiftfilt": 7, "magnificationfilt": 7, "mirrorfilt": 7, "offsetfilt": 7, "rotation2dfilt": [7, 44], "setaxisfilt": 7, "symmetrizefilt": 7, "convolv": [], "convolve1d": [], "correl": [], "correlate1d": [], "gaussian_filt": 7, "gaussian_filter1d": [], "gaussian_gradient_magnitud": [], "gaussian_laplac": [], "generic_filt": [], "generic_filter1d": [], "generic_gradient_magnitud": [], "generic_laplac": [], "laplac": [], "maximum_filt": [], "maximum_filter1d": [], "median_filt": 7, "minimum_filt": [], "minimum_filter1d": [], "percentile_filt": [], "prewitt": 7, "rank_filt": [], "sobel": 7, "uniform_filt": 7, "uniform_filter1d": [], "dim": [5, 32], "filt": [6, 31], "dimens": [5, 6, 7, 31, 32, 38, 43, 44], "2": [3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 18, 19, 21, 23, 24, 25, 26, 27, 28, 31, 32, 38, 40, 43, 44, 46, 49, 50], "qtreewidget": 6, "qdialog": 32, "n": [3, 5, 7, 32, 37, 49], "qhboxlayout": 32, "label": [15, 23, 28, 32, 50], "init": 32, "0": [3, 5, 6, 7, 8, 13, 14, 15, 19, 21, 23, 31, 32, 38, 40, 43, 44, 49, 50], "qspinbox": 44, "val": 32, "loader": 9, "check": [3, 6, 14, 16, 32, 37, 40, 43, 44, 49, 50], "fals": [5, 7, 9, 10, 13, 14, 15, 19, 31, 32, 33, 34, 44], "qgridlayout": 32, "odd": 32, "true": [6, 7, 9, 10, 12, 14, 15, 19, 21, 31, 32, 33, 44, 49], "_convolutionfilt": 7, "laplacian": 7, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 48, 49, 50], "tupl": [5, 7, 19, 21, 22, 25, 30, 32, 35, 44], "along": 7, "which": [1, 2, 5, 6, 7, 9, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 44, 45], "exampl": [4, 5, 6, 7, 9, 10, 13, 14, 18, 21, 23, 24, 26, 27, 28, 33, 35, 38, 42, 44, 45, 46], "3": [3, 4, 5, 6, 7, 13, 14, 19, 21, 23, 37, 38, 39, 40, 43, 44, 49, 50], "4": [3, 4, 5, 7, 13, 19, 21, 30, 38, 39, 40, 43, 44, 49, 50], "5": [3, 5, 7, 13, 14, 21, 38, 40, 44, 49, 50], "f": [6, 7, 8, 9, 10, 40, 44], "result": [2, 5, 6, 7, 10, 14, 31, 37, 39, 40, 43, 44, 46], "execut": [2, 5, 6, 7, 10, 39, 44, 46, 47], "chunk": [5, 7], "auto": [5, 7, 11, 13, 14, 21, 25, 29, 49, 50], "rechunk": 7, "arrai": [2, 5, 7, 9, 23, 31, 32, 38, 43, 44, 45], "user": [2, 3, 5, 6, 7, 9, 10, 16, 30, 31, 32, 34, 36, 41, 43, 44, 46, 49], "should": [1, 5, 6, 7, 9, 10, 13, 14, 16, 31, 34, 37, 40, 41, 43, 44, 45, 47, 50], "proper": 7, "effici": [7, 37, 43], "parallel": [2, 3, 5, 7, 41, 45, 48], "calcul": [2, 5, 7, 21, 25, 29, 37, 45], "manual": [5, 7], "see": [1, 5, 6, 7, 10, 13, 15, 19, 22, 28, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 45, 47, 49, 50], "http": [1, 2, 3, 5, 7, 37, 44, 45], "doc": [5, 7, 37, 44, 45], "org": [5, 7, 37, 44, 45], "en": [5, 7, 37, 44, 45], "latest": [5, 7, 38, 45], "html": [7, 37], "detail": [5, 6, 7, 10, 19, 30, 33, 34, 39], "return": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45], "us": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 16, 21, 23, 25, 31, 32, 33, 34, 35, 37, 40, 41, 42, 44, 45, 48, 49, 50], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49], "dict": [5, 6, 7, 10, 11, 12, 15, 16, 19, 22, 28, 30, 31, 35, 46], "implement": [5, 6, 7, 9, 13, 14, 34, 35, 37, 43, 46, 48], "np": [5, 6, 7, 9, 35, 37, 40, 44, 45, 49, 50], "gradient": 7, "gener": [4, 5, 6, 7, 9, 11, 12, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 43, 45, 46, 49], "descript": [5, 7, 13, 19], "list": [5, 7, 9, 10, 11, 14, 16, 19, 23, 31, 32, 33, 43, 44], "from": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50], "import": [4, 5, 6, 7, 9, 10, 13, 14, 18, 21, 23, 24, 26, 27, 28, 33, 34, 35, 36, 38, 40, 41, 44, 45, 46, 48, 49, 50], "numpi": [2, 3, 5, 7, 9, 35, 37, 40, 41, 44, 45, 49, 50], "linspac": [7, 40, 49, 50], "100": [5, 7, 35, 37, 45, 49, 50], "nabla": 7, "ar": [1, 2, 5, 7, 9, 10, 11, 14, 31, 32, 34, 37, 40, 41, 43, 44, 46, 49], "print": [5, 7, 9, 10, 13, 33, 36, 39, 44, 46], "chang": [1, 2, 5, 6, 7, 10, 13, 14, 18, 19, 22, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 43, 44, 49, 50], "all": [5, 6, 9, 10, 11, 13, 14, 15, 16, 19, 22, 30, 31, 32, 34, 35, 37, 39, 40, 43, 44, 45, 46], "can": [2, 3, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 50], "applid": [], "method": [5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 44, 46, 50], "ones": [5, 6, 7], "6": [3, 5, 7, 21, 43], "7": [5, 7, 13, 43, 49], "8": [3, 5, 7, 40], "sum": [6, 7, 31], "order": [7, 12, 30], "type": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 48, 50], "argrelmax": [], "medsiz": [], "peakaxi": [], "scanaxi": [], "cut": [7, 33], "dimension": [2, 7, 19, 32, 38, 43, 44, 45], "arbitrari": [2, 3, 7, 39, 40, 43, 44, 46], "finit": 7, "specifi": [5, 7, 9, 13, 14, 19, 31, 32, 33, 34], "start": [3, 7, 9, 37, 39, 40, 44], "end": [6, 7, 33], "point": [7, 29, 31, 43, 49], "coordin": [7, 20], "x1": [5, 7, 11, 14, 24, 26, 27, 30, 31, 43], "y1": [5, 7, 11, 14, 24, 26, 27, 30, 31, 40, 43], "x2": [5, 7, 11, 14, 26, 27, 31], "y2": [5, 7, 14, 26, 31, 40], "For": [3, 7, 8, 42, 43, 44, 45, 46, 50], "10": [7, 15, 22, 28, 42, 44, 49, 50], "mean": [7, 13, 14, 31, 43], "2x": 7, "sequenc": [7, 11, 14, 18, 24, 25, 26, 27, 28, 31, 32, 40, 43, 45], "abov": [5, 7, 16, 19, 31, 40, 43, 44, 46], "around": [7, 15, 40], "pixel": 7, "unit": [7, 13], "coord": [], "cutoff": 7, "band": 7, "pass": [1, 7, 9, 31, 42, 44, 45], "butterworth": 7, "scipi": [2, 3, 7, 8, 41, 44], "signal": [5, 7, 10, 16, 34], "filtfilt": 7, "length": [7, 11, 13, 14, 18, 19, 21, 25, 26, 27, 28, 30, 31, 32, 44, 49], "nyquist": 7, "stop": 7, "forward": 7, "process": [2, 7, 31, 37, 43, 45, 49], "absolut": [7, 9, 13, 50], "window": [3, 7, 9, 31, 33, 34, 35, 37, 39, 40, 42, 43, 46, 48, 50], "rect": [7, 11, 18, 26, 27, 43], "roll": 7, "fast": [2, 7], "fourier": [2, 7], "fft": 7, "If": [1, 3, 5, 6, 7, 9, 10, 13, 14, 21, 23, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47], "complex": [7, 19, 25, 45, 48], "postprocess": [7, 31], "when": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 45, 46, 50], "real": [7, 19, 49], "part": [7, 16, 43], "requir": [7, 16, 31, 38, 41], "one": [7, 31, 43, 44], "befor": [6, 7, 38, 44, 46], "backward": 7, "foward": 7, "phase": [7, 8], "hann": 7, "ham": 7, "blackman": 7, "examl": 7, "9": [3, 5, 7, 13, 14, 15, 40, 44], "75": [], "high": [2, 7], "float": [5, 7, 11, 13, 14, 15, 17, 21, 23, 24, 25, 27, 29, 30, 31, 32, 34, 44, 45], "low": [2, 7], "max": [7, 21, 25, 31, 49], "min": [7, 21, 25, 31, 49], "median": [7, 31, 32, 37, 43], "center": 7, "radius": 7, "circular": [7, 16], "circularli": 7, "r": 7, "under": [1, 3, 7, 46, 49], "develop": [3, 6, 7, 9, 10, 13, 14, 33, 34, 42, 46], "posit": [5, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 43, 49, 50], "where": [7, 31, 38, 43], "indic": [5, 23, 29, 32, 44], "interpol": [2, 7, 44], "new": [1, 6, 7, 10, 31, 32, 33, 34, 37, 43, 44, 45, 48, 49, 50], "shape": [5, 7, 19, 23, 32, 38, 45, 49], "quadrut": [], "200": 7, "index1": 7, "index2": 7, "op": 7, "oper": [2, 7], "more": [2, 7, 43], "evalu": [5, 7, 10], "object": [6, 7, 10, 16, 19, 31, 33, 34, 36, 45, 46], "11": [3, 7, 42, 44, 49], "tranpos": 7, "transpos": 7, "filenam": [5, 6], "normal": [5, 7], "t": [1, 7], "i_norm": 7, "i_slic": 7, "determin": [7, 19, 31], "int_0": 7, "int_1": 7, "dydz": 7, "sqeuenc": 7, "refindex": 7, "refer": [7, 16, 36], "ndim": [5, 7], "divid": [7, 45], "dsata": 7, "diff": 7, "between": [7, 32, 40, 43], "select": [7, 10, 14, 32, 33, 36, 37, 38, 40, 43, 44, 45, 49, 50], "The": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 49], "12": [3, 7, 40, 44], "13": [3, 7, 44], "14": [7, 50], "15": [3, 7], "given": [6, 7, 9, 20, 43, 44], "valu": [7, 9, 13, 14, 21, 23, 25, 32, 37, 39, 40, 43, 44, 45, 49], "first": [7, 33, 40, 44, 49], "add": [1, 3, 6, 7, 8, 9, 10, 11, 14, 16, 31, 37, 38, 39, 43, 48, 49], "edg": [7, 11, 13, 23, 28, 39, 43, 50], "pad": 7, "ad": [1, 5, 6, 7, 9, 10, 11, 12, 14, 16, 18, 19, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 43, 48], "last": [7, 43], "both": [2, 7, 10, 14, 43], "zero": [5, 13, 14], "left": [13, 14, 15, 20, 23, 28, 43, 49, 50], "kernel": [7, 32, 38], "reduc": 7, "xn": 7, "yn": 7, "direct": [5, 7, 14, 21, 23, 24, 43], "respect": [7, 32], "gain": 7, "nois": [7, 43], "ratio": [7, 13], "summat": 7, "c": [4, 7, 8, 31, 38, 40, 42], "mode": [3, 7, 13, 14], "output": 7, "mask": 7, "adapt": 7, "threshold": 7, "otherwis": [7, 31, 35], "nan": 7, "gaussian": [7, 8, 32, 43], "maskeddata": 7, "inv": 7, "includ": [1, 7, 9, 12, 16, 30, 31, 40], "revert": 7, "offset": [7, 8, 19, 30, 49], "whether": [7, 14, 31, 32, 34], "origin": [6, 7, 37, 40, 43, 46, 48], "mask_inv": 7, "maskeddata_inv": 7, "reflect": [7, 44], "revers": [7, 32], "flip": 7, "amount": 7, "ndimag": [7, 44], "replac": 7, "rot": [7, 25], "deg": 7, "rotat": [7, 25, 44], "angl": [7, 44], "rad": 7, "simpl": [7, 8, 45, 48], "mathemat": 7, "averag": [7, 38], "each": [5, 7, 13, 19, 45], "sigma": [7, 8, 32], "shit": 7, "mag": 7, "magnifi": 7, "2d": [2, 7, 8, 43, 44, 49, 50], "mirror": [7, 14, 15], "form": [6, 7, 11, 14, 18, 21, 22, 24, 26, 27, 28, 30, 31], "symmetr": 7, "bool": [6, 7, 10, 12, 14, 15, 19, 21, 22, 23, 25, 30, 31, 32, 33, 34], "plane": [7, 44], "defin": [2, 5, 7, 10, 36, 37, 40, 44, 46], "two": [7, 32, 40, 44], "spline": [7, 44], "degre": [7, 44], "val1": 7, "val2": 7, "step": [1, 7, 8, 32, 39, 50], "fold": 7, "central": [5, 7, 31, 43], "input": [1, 6, 34, 44], "weight": [], "cval": [], "multidimension": [], "array_lik": 5, "same": 43, "number": [3, 5, 43], "dtype": [19, 44, 45], "option": [3, 5, 37], "place": [], "By": [1, 33], "default": [6, 10, 31, 33, 34, 35, 37], "an": [2, 10, 20, 23, 32, 35, 37, 43, 44, 46, 49], "creat": [1, 2, 3, 5, 6, 9, 31, 36, 40, 44, 45, 48], "constant": 23, "nearest": 5, "wrap": 5, "how": [2, 38, 44, 45], "extend": [2, 9, 10, 44], "beyond": [], "its": [1, 19], "boundari": [], "behavior": [], "valid": [14, 32], "follow": [1, 3, 34, 37, 41, 43, 44, 50], "d": [5, 8, 31, 32, 35, 45], "b": [8, 31, 40], "about": [], "k": [], "fill": [23, 49], "replic": [], "opposit": [], "scalar": [], "control": 31, "placement": [], "": [39, 40, 43, 44, 50], "A": [1, 6, 19, 32, 43, 44, 49], "over": [], "neg": 15, "right": [10, 13, 14, 15, 20, 28, 33, 36, 37, 38, 39, 40, 42, 43, 45, 49, 50], "equal": [], "differ": [2, 34, 43], "ndarrai": [5, 9], "c_i": [], "sum_j": [], "i_": [], "w_j": [], "spatial": [], "perhap": [], "simplest": [], "case": [37, 44], "understand": [39, 48], "becaus": [10, 36, 37, 40, 41, 42, 43, 44], "border": [], "treat": [2, 49], "equival": 46, "outer": [], "extract": [], "onli": [3, 31, 32, 38, 40, 42, 43, 44, 46], "16": [], "With": [], "miss": [], "diagon": [], "corner": [], "singl": [], "repeat": [], "mani": [36, 41, 45, 49], "time": [10, 36, 37, 43], "need": [42, 44, 45, 46, 49], "match": [], "overlap": 10, "24": [], "36": [], "27": [], "move": [20, 31, 34, 43], "often": 44, "product": [], "locat": [10, 44], "input_img": [], "arang": [], "25": [], "reshap": 44, "17": [], "18": [], "19": 3, "20": [37, 50], "21": [], "22": [], "23": [], "In": [3, 37, 40, 43, 44], "up": 43, "down": [], "next": [9, 39, 44, 50], "element": [], "we": [1, 3, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49], "60": 38, "26": 3, "30": [], "35": 49, "40": [], "44": [], "51": [], "55": [], "65": 50, "69": [], "76": [], "80": [], "85": [], "90": [], "94": [], "96": [], "105": [], "110": [], "114": [], "28": [], "truncat": [], "standard": 2, "deviat": [], "integ": [32, 35], "correspond": [5, 7, 43, 46], "deriv": [], "str": [5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 35, 44], "intermedi": [], "store": [31, 34, 44, 46], "therefor": [31, 43, 44], "limit": [14, 48], "precis": [], "mai": [10, 37], "imprecis": [], "insuffici": [], "50": 25, "32": [], "34": [], "38": [], "42": [], "46": [], "48": [], "29": [], "31": [], "33": [], "37": [], "39": [], "misc": [], "matplotlib": [2, 3, 4, 9, 16, 23, 32, 41, 43, 49], "pyplot": 32, "plt": [], "fig": [], "figur": [13, 41, 50], "grai": 21, "show": [4, 9, 10, 15, 22, 35, 38, 39, 43, 44, 45, 49, 50], "grayscal": [], "ax1": [], "add_subplot": [], "121": [], "side": [31, 34, 40], "ax2": [], "122": [], "ascent": [], "imshow": [], "42704095": [], "06782203": [], "93217797": [], "57295905": [], "91948343": [], "95023502": [], "04976498": [], "08051657": [], "random": [35, 37, 40, 45, 49], "seed": [], "280490": [], "randn": [], "101": [40, 50], "cumsum": [], "y3": 5, "y6": [], "plot": [9, 29, 48], "legend": [4, 23, 49], "magnitud": [], "extra": [], "keyword": [5, 6, 9, 44], "argument": [5, 6, 9, 20, 35, 44], "ha": [10, 41, 42, 43, 45, 46], "second": [37, 40], "footprint": [], "extra_argu": [], "extra_keyword": [], "At": [37, 50], "provid": [], "call": [5, 10, 16, 31, 34, 36, 40, 43, 44, 46], "within": 5, "doubl": [8, 20, 43, 49, 50], "callabl": 9, "lowlevelcal": [], "below": [3, 7, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50], "either": [], "must": 44, "give": [9, 10, 40, 41], "taken": [], "everi": [], "boolean": 32, "implicitli": [], "also": [2, 5, 31, 38, 42, 43, 44, 45], "get": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35], "thu": [], "m": [3, 36, 49, 50], "adjust": [], "so": [], "actual": [1, 13], "level": 17, "callback": [], "signatur": 44, "buffer": [], "npy_intp": [], "filter_s": [], "return_valu": [], "void": [], "user_data": [], "intptr_t": [], "iter": [], "current": [1, 3, 6, 34], "through": [2, 5, 31, 42], "pointer": [], "error": [8, 23, 49], "statu": 37, "someth": [], "went": [], "wrong": [], "occur": [], "you": [1, 2, 3, 4, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50], "inform": [6, 12, 15, 16, 22, 28, 30, 31, 43, 44], "messag": [10, 37, 42, 43], "addit": [6, 19, 37, 41], "some": [5, 34, 41], "other": [2, 3, 5, 36, 44, 50], "specif": 46, "compat": [], "code": [1, 2, 3, 7, 14, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "appropri": [], "accord": [], "input_lin": [], "input_length": [], "output_lin": [], "output_length": [], "condit": [], "after": [3, 5, 9, 10, 31, 34, 35, 37, 38, 39, 42, 44, 49], "extens": [5, 9, 33], "assum": 3, "inplac": [], "care": [37, 46], "them": 43, "derivative2": [], "approxim": [], "maximum": [14, 21, 25], "per": 13, "support": [2, 5, 37, 40], "separ": [], "string": [5, 6, 12, 17, 21, 23, 28, 29, 32, 44], "maximum1d": [], "maxlist": [], "algorithm": [], "_": 45, "describ": [], "richard": [], "harter": [], "guarante": [], "o": [], "perform": 2, "being": [], "regardless": [], "citeseerx": [], "ist": [], "psu": [], "edu": [], "viewdoc": [], "summari": 1, "doi": [], "2777": [], "www": [], "richardhartersworld": [], "com": [1, 2, 3], "cri": [], "2001": [], "slidingmin": [], "minimum": [14, 21, 25], "1d": [2, 9, 37, 43, 44, 48, 49], "minlist": [], "percentil": [], "less": [], "rank": [], "largest": [], "uniform": [], "easi": 5, "via": [5, 31, 42, 46, 49], "mainli": [5, 31, 33], "u": 5, "consist": [5, 44], "particularli": 5, "semi": 5, "automat": [2, 5, 6, 9, 10, 14, 21, 23, 25, 29, 30, 31, 33, 34, 37, 43, 44, 46], "launch": [5, 37, 38], "usag": [5, 48], "public": [1, 2, 5, 11, 16, 35], "access": [5, 10, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35], "__getattr__": 5, "easili": [5, 34, 36, 45], "convert": [5, 9, 19, 49], "construtor": 5, "metadata": 5, "basic": [5, 10, 20], "initi": [5, 16, 32, 40, 44], "dw": [5, 45], "from_arrai": 5, "larg": 37, "da": [5, 44, 45], "arr": [5, 9], "prepar": [5, 7, 9, 50], "mehotd": 5, "delai": [5, 45], "huge": 5, "visual": [2, 5, 41, 43, 45], "done": [2, 10, 16, 37, 39, 43, 44], "constructor": 44, "Then": [40, 42, 44], "even": 43, "alwai": [], "obtain": [14, 38, 46], "shortcut": 5, "lazi": 5, "finish": [5, 34], "caucul": 5, "repres": [5, 10, 43], "w2": 5, "classmethod": [5, 6], "n_worker": 5, "threads_per_work": 5, "initializa": 5, "local": [5, 10, 46], "cluster": 5, "do": [2, 3, 5, 6, 7, 10, 31, 36, 37, 39, 42, 43, 44, 45, 46, 49], "NOT": 5, "worker": 5, "therad": 5, "dictionari": [5, 10, 11, 12, 13, 16, 19, 30, 31, 34, 35, 44, 46], "kei": [5, 20, 44], "item": [5, 9, 40], "key2": 5, "1111": 5, "intern": [5, 31], "wrapper": 5, "__setitem__": 5, "__delitem__": 5, "behav": 5, "doe": [3, 5, 34, 37, 42], "exist": [5, 46], "setting1": 5, "settingstr": 5, "dic": 5, "d2": 5, "compos": [5, 16, 31], "There": [5, 43], "sever": [2, 5, 10, 16, 18, 24, 26, 27, 34, 37, 41], "wai": [1, 5, 43], "without": [2, 5], "axs": [], "wave1": [5, 40, 50], "etc": [5, 16, 33, 41], "npz": [5, 35, 37], "variou": [9, 34, 48, 50], "png": [2, 41, 50], "deprec": [], "static": [5, 6, 16], "format": [2, 5], "sequenti": 5, "path": [5, 6, 9, 10, 33, 35, 45], "exmpl": 5, "It": [2, 3, 6, 7, 10, 31, 34, 37, 38, 39, 40, 41, 43, 44], "recommend": [1, 6, 10, 34, 35, 37, 41, 44], "loadwav": [], "pyqtsign": [5, 11, 16, 18, 19, 24, 26, 27, 28, 30], "emit": [5, 6, 10, 11, 13, 14, 16, 18, 20, 22, 24, 26, 27, 28, 31, 32, 33, 34, 35], "connect": [5, 10, 36, 37, 43], "lambda": [5, 10, 33, 36], "directli": [3, 5, 9, 31], "usuful": 5, "built": [5, 46, 50], "instanti": [5, 31, 34], "translat": [5, 20, 44], "n1": 5, "n2": 5, "n3": 5, "interpret": [5, 9, 41, 46, 48], "th": 5, "translt": 5, "0th": 5, "correspoind": 5, "x3": 5, "functionar": [10, 31, 34, 35, 37, 43], "properti": [5, 10, 31, 34, 46], "frequent": [5, 32], "wave2": [5, 50], "relat": [9, 18, 24, 26, 27], "global": [9, 10, 33], "variabl": [9, 10, 44, 46], "main": [1, 9, 33, 36, 39, 40, 43, 44, 45, 46, 50], "most": [1, 2, 9, 37, 42, 50], "exclud": [9, 20], "front": 9, "lib": [4, 9], "pyqtgraph": [3, 4, 9, 41, 43], "librari": [2, 4, 9, 16, 41, 44], "contain": [6, 9, 16, 31], "directori": [3, 9, 10, 33, 46, 47], "loadabl": 9, "depend": [9, 14, 35, 37, 43, 45], "tif": [], "jpg": [], "grf": 50, "func": [8, 9, 16], "regist": [9, 33, 34, 44], "extent": 9, "txt": [9, 33], "loadtxt": [9, 45], "command": [2, 3, 10, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50], "ctrl": [9, 36, 39, 40, 42, 50], "press": [9, 20, 37, 39, 40, 42, 43, 50], "inspect": [], "__name__": [9, 10], "instanc": [6, 10, 13, 14, 15, 21, 22, 23, 25, 29, 30, 31, 35, 44, 46], "want": [3, 10, 36, 37, 39, 43, 47, 50], "custom": [2, 10, 33, 34, 48], "script": [], "__main__": [], "realiz": [2, 10], "gui": [2, 3, 10, 37, 41, 46, 48, 50], "restor": [10, 34], "workspac": 10, "extendshel": [10, 46], "addfilt": [6, 44], "fromfil": 6, "fromstr": 6, "getfiltergui": [], "getfilterguinam": [], "getfilternam": [], "tofil": 6, "tostr": 6, "filternam": [6, 44], "guinam": [6, 44], "guigroup": [6, 44], "omit": [6, 31, 44], "filtersettingbas": [6, 44], "decor": [6, 16], "filtergui": [6, 44], "group": [6, 40, 44], "fil": [6, 37], "param": [32, 33, 34], "saveasfil": 6, "dimensionchang": [6, 31], "getdimens": 6, "getfilterclass": 6, "setparamet": [6, 44], "insert": 6, "keyward": 6, "read": [42, 44], "loadfrom": [], "filterclass": 6, "pre": [2, 34, 37, 44], "filepath": 6, "filter_str": [6, 44], "test": [3, 6, 10, 28, 33, 37, 40, 42, 44, 45, 46, 48, 49], "tutori": [2, 41, 43, 50], "present": [6, 10, 13, 31, 37, 43, 44], "state": [1, 6, 14, 31, 32, 43], "success": 6, "embed": 6, "layout": [6, 32, 44], "well": [3, 7, 43, 46], "canvasannot": [11, 16], "canvaspart": [11, 12, 13, 14, 15, 16, 19, 20, 22, 30], "addcrossannot": [11, 18], "bottomleft": [11, 12, 14, 18, 19, 24, 26, 27, 28, 30], "appear": [11, 12, 18, 19, 24, 26, 27, 30, 50], "cross": [11, 18, 31, 43], "bottomright": [11, 12, 14, 18, 19, 24, 26, 27, 28, 30], "topleft": [11, 12, 14, 18, 19, 24, 26, 27, 28, 30], "topright": [11, 12, 14, 18, 19, 24, 26, 27, 28, 30], "saveappear": [11, 12, 19, 30], "addfreeregionannot": [11, 27], "free": [2, 11, 27, 31], "x0": [11, 24, 27, 30, 43], "y0": [11, 24, 27, 30, 43], "freeregionannot": [11, 27], "addinfinitelineannot": [11, 24], "vertic": [11, 14, 24, 27, 31, 49], "infinit": [11, 24, 31], "horizont": [11, 14, 21, 24, 27, 40, 49], "infinitelineannot": [11, 24], "addlineannot": [11, 24], "addrectannot": [11, 26], "rectangl": [11, 26, 27, 31, 43], "height": [8, 11, 13, 21, 26, 50], "addregionannot": [11, 27], "addtext": [11, 28], "text": [11, 15, 28, 32, 39], "shown": [11, 12, 14, 15, 40, 42, 43, 44], "annotationchang": 11, "getannot": [11, 31], "infinitelin": 11, "freeregion": 11, "getcrossannot": 11, "getfreeregionannot": 11, "getinfinitelineannot": 11, "getlineannot": 11, "getrectannot": 11, "getregionannot": 11, "gettextannot": 11, "removeannot": 11, "disablesavecanva": 16, "savecanva": 16, "canvasfocusev": 20, "canvaskeyboardev": 20, "canvasmouseev": 20, "getfrontcanva": 20, "canvasmargin": 13, "canvass": [13, 16], "canvasax": 14, "canvastick": [14, 16], "canvasaxislabel": [15, 16], "canvasticklabel": [15, 16], "canvasdata": [16, 19], "linedata": [19, 23, 30], "imagedata": [19, 21, 30], "rgbdata": [19, 25, 30], "vectordata": [19, 29, 30], "contourdata": [17, 19, 30], "annotationwithlin": [12, 18, 24, 26, 27], "getnam": [12, 30], "getvis": [12, 30], "visibl": [12, 14, 15, 21, 22, 23, 25, 30], "annotaion": 12, "getzord": [12, 30], "loadappear": [12, 30], "appearnc": 12, "usual": [4, 12, 15, 16, 18, 24, 26, 27, 28, 30, 34, 43, 45, 46], "setnam": [12, 30], "setvis": [12, 30], "setzord": [12, 30], "getlinecolor": 12, "color": [12, 14, 15, 17, 19, 21, 22, 23, 25, 28, 29, 31, 32, 34, 49, 50], "ff0000": [12, 17, 18, 23, 24, 26, 27, 29], "getlinestyl": 12, "style": [12, 17, 23, 28], "solid": [12, 17, 23], "dash": [12, 17, 23, 49], "dashdot": [12, 17, 23], "dot": [12, 17, 23], "getlinewidth": 12, "setlinecolor": [12, 18, 24, 26, 27], "setlinestyl": 12, "setlinewidth": 12, "abstract": [13, 14, 22], "margin": 13, "_setmargin": 13, "bottom": [10, 13, 14, 15, 20, 23, 28, 36, 37, 38, 39, 43, 50], "top": [13, 14, 15, 20, 23, 28, 43, 50], "g": [13, 14, 18, 21, 23, 24, 26, 27, 28, 33], "setmargin": 13, "getmargin": 13, "raw": [13, 14, 31, 49], "marginchang": 13, "refreshmargin": 13, "refresh": [10, 13], "subplot": 13, "fraction": 13, "_setauto": 13, "_setabsolut": 13, "_setaspect": 13, "_getsiz": 13, "setcanvass": 13, "getcanvass": 13, "canvasres": 13, "getsizeparam": 13, "axis1": [13, 38, 43], "axis2": [13, 38, 43], "parentres": 13, "refreshcanvass": 13, "freeli": [13, 43], "remain": [13, 41], "cm": [13, 50], "aspect": 13, "plan": 13, "addaxi": 14, "axischang": [14, 32], "axislist": 14, "axisrangechang": 14, "clearselectedrang": 14, "getaxiscolor": 14, "whose": [14, 43, 44, 49], "thick": [14, 23, 49], "123456": 14, "setaxiscolor": 14, "getaxismod": 14, "scale": [14, 21, 29, 49], "linear": [8, 14, 40], "log": [8, 10, 14, 21, 32, 39], "getaxisrang": [14, 31], "view": [14, 28, 32, 33], "setaxisrang": [14, 31], "setautoscaleaxi": 14, "getaxisthick": 14, "setaxisthick": 14, "getmirroraxi": 14, "hidden": [14, 49], "setmirroraxi": 14, "isautosc": 14, "israngeselect": 14, "empti": [6, 14, 43], "selectedrang": 14, "setselectedrang": 14, "selectedrangechang": 14, "autoscal": 14, "setaxismod": 14, "tick": [14, 15, 50], "gettickdirect": 14, "box": [14, 28, 32, 37, 39, 40, 43], "out": [14, 34], "settickdirect": 14, "gettickinterv": 14, "major": 14, "interv": [14, 50], "minor": [14, 50], "settickinterv": 14, "getticklength": 14, "setticklength": 14, "gettickvis": 14, "settickvis": 14, "gettickwidth": 14, "settickwidth": 14, "getaxislabel": 15, "getaxislabelcoord": 15, "getaxislabelfont": 15, "font": [15, 22, 28], "setaxislabelfont": 15, "getaxislabelvis": 15, "setaxislabel": 15, "setaxislabelcoord": 15, "famili": [2, 28], "black": [15, 22, 28, 50], "111111": [15, 22, 28], "setaxislabelvis": 15, "hide": [15, 22, 49], "getticklabelfont": 15, "setticklabelfont": 15, "getticklabelvis": 15, "000000": 15, "setticklabelvis": 15, "tf": 15, "canvasaxi": 16, "inherit": [16, 18, 24, 26, 27, 30, 34], "addcanvaspart": 16, "loadfromdictionari": [16, 31, 35], "saveasdictionari": [16, 31, 35], "written": 16, "delayupd": 16, "block": 16, "heavili": 16, "avoid": [3, 10, 16, 41, 42, 46], "draw": [16, 37], "repeatedli": 16, "final": [16, 35, 44], "explicit": 16, "break": 16, "caus": 16, "memori": 16, "leak": 16, "initcanva": 16, "loadcanva": 16, "multipl": 16, "getcolor": [17, 23, 29, 32], "getlevel": 17, "getstyl": [17, 23], "setcolor": [17, 23, 29, 32], "setlevel": 17, "setstyl": [17, 23], "positionchang": [18, 24], "theposit": 18, "colormap": [19, 21, 25, 32, 37, 43, 49], "setoffset": [19, 30], "datachang": [19, 35], "emittd": 19, "getcontour": 19, "getimag": [19, 21], "getlin": [19, 23], "getrgb": 19, "getvectorfield": 19, "getwavedata": 19, "focus": [20, 34], "keyborad": 20, "click": [10, 20, 33, 37, 38, 39, 40, 42, 43, 45, 49, 50], "mous": 20, "doubleclick": 20, "mapposit": 20, "qevent": 20, "mousepress": 20, "mousemov": 20, "mousereleas": 20, "releas": [20, 34], "im": [], "setcolormap": [21, 32], "getautocolorrang": [21, 25], "automar": [21, 25], "setcolorrang": [21, 25], "getcolorrang": [21, 25], "getcolorbardirect": 21, "colorbar": [21, 49], "getcolorbarposit": 21, "getcolorbars": 21, "getcolorbarvis": 21, "getcolormap": 21, "getgamma": 21, "gamma": [21, 32], "getopac": 21, "opac": [21, 32], "islog": [21, 32], "logarithm": 21, "setcolorbardirect": 21, "vretic": 21, "setcolorbarposit": 21, "setcolorbars": 21, "setcolorbarvis": 21, "cmap": [21, 32], "setgamma": [21, 32], "setlog": [21, 32], "setopac": [21, 32], "getcaps": 23, "cap": [23, 49], "errorbar": [23, 49], "geterrorbar": 23, "getlegendlabel": 23, "getlegendvis": 23, "getmark": 23, "marker": [23, 49], "seen": 23, "line2d": 23, "getmarkerfil": 23, "getmarkers": 23, "getmarkerthick": 23, "setcaps": 23, "capsiz": 23, "seterrorbar": 23, "setlegendlabel": 23, "setlegendvis": 23, "setmark": 23, "setmarkerfil": 23, "full": [23, 41], "ritght": 23, "setmarkers": 23, "setmarkerthick": 23, "getorient": [24, 27], "getcolorrot": 25, "getrgbwav": 25, "setcolorrot": 25, "getsiz": 26, "regionchang": [26, 27], "widthchang": 27, "psition": 28, "getboxcolor": 28, "getboxstyl": 28, "bound": 28, "setboxstyl": 28, "getfont": 28, "setfont": 28, "gettext": 28, "gettransform": 28, "setboxcolor": 28, "facecolor": 28, "edgecolor": 28, "face": 28, "squar": 28, "circl": [28, 49], "round": 28, "round4": 28, "larrow": 28, "rarrow": 28, "darrow": 28, "roundtooth": 28, "sawtooth": 28, "settext": 28, "settransform": 28, "fix": [1, 28], "getautoscal": 29, "getpivot": 29, "pivot": [29, 49], "getscal": 29, "setpivot": 29, "tail": 29, "middl": [29, 49], "tip": 29, "setscal": 29, "wa": 30, "getfilteredwav": [30, 31], "have": [3, 30, 38, 41, 42, 43, 44, 45, 50], "been": [10, 30, 41, 42, 43, 46], "getoffset": 30, "getwav": 30, "emimt": 30, "filterr": 30, "canvaslegend": 22, "getlegendfont": 22, "setlegendfont": 22, "getlegendframevis": 22, "frame": [22, 37], "getlegendposit": 22, "legendpositionchang": 22, "setlegendframevis": 22, "setlegendposit": 22, "3333333": 7, "33333333": 7, "impuls": 7, "ndfilter": 7, "ab": 7, "new_data": 7, "old_data": [], "pssed": 7, "lyscanva": 32, "wiget": 4, "annotationsss": [], "addtab": 36, "beforeclos": 10, "closeallgraph": 10, "close": [10, 31, 34, 37, 43, 50], "addobject": 10, "commandexecut": 10, "commandlog": 10, "eval": [10, 46], "exec": [10, 46], "importal": 10, "importmodul": 10, "qmainwindow": 10, "tab": [10, 37, 38, 43, 44, 48, 49, 50], "bar": [31, 40], "filesystemview": [10, 33], "qtwidget": [33, 36, 44], "tabwidget": [10, 36], "testtab": [], "submit": 1, "button": [10, 38, 39, 40, 43, 50], "context": [10, 33, 43], "menu": [10, 33, 38, 40, 43, 44, 45, 48], "plugin": 10, "express": 10, "singleton": 10, "hello": [10, 36, 39], "my_modul": [], "printresult": 10, "To": [2, 10, 35, 37, 42, 43, 46, 47], "expr": 10, "reload": 10, "importlib": 10, "newfilt": [], "mdi": 34, "usu": 34, "autosavedwindow": [], "mdiarea": 34, "sub": 34, "saveset": 34, "restoreset": 34, "attach": 34, "medi": 34, "modifywindow": [], "attachto": 34, "programat": [31, 34], "intention": 34, "isfloat": 34, "loadset": 34, "moveev": 34, "movefinish": 34, "resizeev": 34, "resizefinish": 34, "resizedfinish": 34, "setsettingfil": 34, "model": 33, "pyqt5": [3, 33, 42, 44], "qfilesystemmodel": 33, "drop": [33, 43], "selectedpath": 33, "registerfilemenu": 33, "drag": [33, 40, 43], "ext": 33, "add_default": 33, "filetyp": 33, "csv": [33, 48], "qmenu": 33, "action": 33, "qaction": 33, "trigger": [33, 36], "addact": [33, 36], "selected2": 33, "setpath": 33, "root": 33, "system": [33, 37, 41, 42, 44, 48, 50], "special": [8, 46], "colorselect": 32, "qpushbutton": 32, "onclick": [], "colorchang": 32, "getcolorasarrai": 32, "colormapselect": 32, "currentcolor": 32, "currentcolormap": 32, "seten": 32, "scientificspinbox": 32, "valuechang": 32, "qdoublespinbox": 32, "spin": 32, "sdientif": 32, "notat": 32, "stepbi": 32, "textfromvalu": 32, "valuefromtext": 32, "qvalid": [], "112233": 32, "qtgui": 32, "qcolor": [32, 34], "checkbox": 32, "qpixmap": 32, "dialog": [32, 40, 43], "multi": [2, 32, 43, 44, 45], "reutrn": 32, "addfittingfunct": 8, "const": [8, 49], "co": 8, "doubleexp": 8, "fwhm": 8, "exp": 8, "gauss": 8, "lorentz": 8, "quadrat": [8, 40], "relaxosci": 8, "relax": 8, "stepexp": 8, "math": [], "bx": 8, "heavisid": 8, "tabl": [9, 35], "arraylik": 9, "lyspath": 9, "rel": 9, "analyz": [9, 31, 43, 45], "fname": [15, 22, 28], "indiceselectionlayout": 32, "getindic": 32, "setshap": 32, "setvalu": [32, 44], "eventfilt": 34, "keypressev": 35, "rais": 35, "loadtabl": 35, "openmodifywindow": 35, "open": [1, 2, 3, 31, 35, 36, 37, 38, 39, 40, 43, 44, 49, 50], "contetnt": 35, "savet": 35, "lystabl": 32, "tabledata": 35, "datasav": 35, "getdata": 35, "getslic": 35, "setslic": 35, "getsliceddata": 35, "setdata": 35, "slc": 35, "handl": 35, "rand": [35, 37, 40, 45, 49], "forc": 5, "isempti": 6, "returninst": 9, "getcolormapdata": 25, "getcolormapposit": 25, "getcolormaps": 25, "getcolormapvis": 25, "setcolormapposit": 25, "setcolormaps": 25, "setcolormapvis": 25, "multicutcui": 31, "axesrangemanag": 31, "childwav": 31, "freelinemanag": 31, "multicutwav": 31, "axesrangechang": 31, "getaxisrangetyp": 31, "reset": 31, "cui": [2, 41, 44], "addwav": 31, "childwaveschang": 31, "getchildwav": 31, "addfreelin": 31, "freelinechang": 31, "freelinemov": 31, "removefreelin": 31, "manag": [31, 41, 43, 46], "axesrangemang": 31, "applyfilt": 31, "getrawwav": 31, "_gridattachedwindow": [], "fromwav": 6, "swap": 7, "editcanva": [], "editmulticut": [], "mcut": 31, "muleticut": [], "editt": [], "qtabwidget": 10, "datatyp": 16, "possibl": [5, 16, 31, 38, 43], "selectionchang": 33, "settitlecolor": 34, "titlecolor": 34, "qcloseev": 35, "example1": 5, "example2": 5, "example3": 5, "ppinttopo": [], "s3": [], "w3": 5, "registr": 9, "savetxt": 9, "sayhello": 10, "retrun": 10, "sinc": [10, 43, 44], "conflict": [3, 10], "advanc": 43, "instanci": [10, 31], "lyssavedwindow": 34, "howev": [34, 37, 41, 43, 44, 49], "recent": 34, "sidebar": [34, 37, 40, 43, 48, 49, 50], "instead": [8, 34], "erf": 8, "sqrt": 8, "theta": 8, "cosin": 8, "hco": [], "x_0": 8, "phi": 8, "exponenti": 8, "conveni": 8, "hexp": [], "ocil": 8, "decai": 8, "multipli": 8, "heta": [], "mathrm": 8, "hd": 8, "tau": 8, "openmulticutset": 31, "userang": 31, "axesmap": 31, "except": [31, 45], "_freelin": 31, "uselin": 31, "dictonari": 31, "child": 31, "_childwav": 31, "although": [31, 37, 41, 42, 45], "manipul": 31, "canvas": 31, "independ": [31, 37, 43], "thei": 31, "canvasmanag": 31, "addannot": 31, "synclin": 31, "addcross": 31, "syncannot": 31, "addlin": 31, "addrect": 31, "addregion": 31, "l": [], "createcanva": 31, "interactivewidget": 31, "interact": [2, 31, 37, 41, 48, 50], "associ": 31, "synchron": [31, 43], "removegraph": 31, "targ": 31, "tcanva": 31, "introduct": 48, "hybrid": 41, "program": [3, 41, 42], "graphic": [2, 41, 48], "charact": 41, "popular": [2, 41], "opencv": [3, 41], "pyqt": [36, 41, 44], "pysid": [], "bare": 41, "jupyt": 41, "notebook": 41, "opportun": 41, "environ": [3, 37, 41, 42], "plai": 41, "disadvantag": 41, "familiar": 41, "similar": [2, 41], "slightli": [], "troublesom": 41, "py": [36, 39, 40, 41, 44, 45, 46], "hard": [41, 43, 49], "difficult": 41, "intuit": [2, 41], "problem": [41, 42, 46], "emploi": [2, 41], "archtechtur": 41, "while": 41, "flexibl": [2, 41, 43], "lost": 41, "beriefli": 41, "know": 41, "power": 41, "flowchart": [], "further": [43, 45, 50], "stare": [], "overview": [], "let": [39, 44], "try": [3, 38, 39, 43], "p": [36, 39], "proc": [36, 39, 46], "def": [36, 39, 40, 44, 45], "what": [1, 2, 37, 39], "now": [39, 50], "everyth": 39, "go": [2, 3, 37, 38, 39, 43, 44, 47, 49, 50], "curv": [38, 40, 43, 50], "combobox": 50, "nset": [], "paramter": 50, "goto": [49, 50], "tex": 50, "syntax": 50, "insid": [43, 50], "00": 50, "red": [49, 50], "good": 50, "featur": [1, 50], "pdf": [2, 42, 50], "ep": [2, 42, 50], "learn": [43, 50], "tool": [42, 43, 44], "iten": [], "sampl": 43, "resourc": [37, 43, 45], "gauss_3d_data": [37, 43], "find": [40, 43, 44], "confirm": [2, 3, 37, 40, 43, 45, 49], "ok": [38, 40, 43], "ye": [40, 43], "3rd": 43, "And": 43, "intens": 43, "similarli": [43, 46], "These": 43, "veri": [36, 37, 42, 43, 48], "than": [2, 43], "3d": [2, 43, 44], "powerful": [43, 44], "non": 43, "still": 43, "image1": 43, "1st": 43, "2nd": 43, "ask": 43, "like": [36, 43, 44, 49], "orang": 43, "slider": 43, "affect": 43, "back": 43, "curve1": 43, "annnot": 43, "section": [3, 43, 44], "ident": [36, 43, 45], "old": 43, "opend": 43, "data1": [37, 43], "gnbu": 43, "image_mcut": [], "line6": [], "fline1": 43, "line0": 43, "profil": 43, "just": [43, 44], "bit": 43, "noizi": 43, "applic": 43, "sequenci": 43, "lys_": [], "filtter": [], "your": [1, 6, 40, 48], "own": [37, 44], "compar": 43, "uncheck": 43, "skip": [3, 43], "flow": 43, "ischang": 43, "almost": [43, 46], "dat": 43, "greatli": 43, "enhanc": 43, "onc": [43, 44, 45], "previou": [43, 44], "work": [1, 3, 37, 42, 43, 44], "template1": 43, "cancel": 43, "much": 43, "faster": 43, "suitabl": 43, "simplic": 43, "futher": 43, "instal": [2, 37, 38, 47], "anim": [2, 48], "experiment": 45, "easiest": 45, "here": [40, 44, 45], "strongli": 45, "conmma": 45, "enter": [36, 40, 45, 46], "load_csv": 45, "csvfile": 45, "simpli": [42, 44, 45], "delimit": 45, "registerd": 45, "successfulli": 45, "sometim": [42, 45], "load_file_dummi": 45, "exapml": 45, "load_parallel": 45, "from_delai": 45, "vstack": 45, "Such": [45, 49], "great": 45, "advantag": 45, "As": 45, "No": 45, "websit": [37, 45], "muloffset": 49, "legent": 49, "gam": 49, "rev": 49, "terrain": 49, "field": 48, "colomap": 49, "wheel": 49, "xx": 49, "yy": 49, "meshgrid": 49, "1j": 49, "too": 49, "recom": [36, 49], "testwindow1": 36, "follw": 36, "makemenu": 36, "menubar": 36, "addmenu": 36, "act1": 36, "act2": 36, "world": 36, "construct": [], "qmenubar": 36, "maketab": 36, "qlabel": 36, "backend": [2, 37], "fore": 37, "paral": 37, "could": 37, "becom": [1, 37], "bottleneck": 37, "take": [37, 44, 46], "diagnost": 37, "help": 37, "browser": 37, "stabl": [37, 44], "dashboard": 37, "distribut": 37, "templat": [37, 44], "data2": 37, "restart": 37, "forget": [37, 44], "reproduc": [1, 2, 48], "filter1": 37, "clidk": 37, "hardest": 44, "task": 44, "lean": 44, "demonstr": 44, "lly": 44, "alia": 44, "qt5": 44, "pyside2": 44, "__init__": 44, "param1": 44, "param2": 44, "_param1": 44, "_param2": 44, "_execut": 44, "newdata": 44, "newax": 44, "newnot": 44, "least": 44, "dark": 44, "manner": 44, "meta": 44, "delet": 44, "word": 44, "f1": 44, "f2": 44, "primit": [42, 44], "test_data": 44, "correct": 44, "useless": 44, "combin": 44, "latter": 44, "half": 44, "_filternameset": 44, "document": [1, 44], "super": 44, "_spin1": 44, "_spin2": 44, "qvboxlayout": 44, "addwidget": 44, "setlayout": 44, "superclass": 44, "lot": 44, "googl": 44, "That": [], "gui1": 44, "gui2": 44, "dummi": [], "paricular": 44, "ufunc": 44, "_angl": 44, "_ax": 44, "gumap": 44, "gufunc": 44, "output_dtyp": 44, "allow_rechunk": 44, "hasattr": 44, "automaticallli": 44, "highli": 37, "ffmpeg": 37, "instruct": [3, 37], "offici": 37, "axis3": 37, "bugn": 37, "modif": 37, "frm": 37, "textbox": 37, "graph000": 37, "our": 37, "mp4": 37, "white": 40, "green": 40, "guess": 40, "treeview": 40, "combo": 40, "fittin": 40, "cursor": 40, "parametor": [], "target": 40, "five": 40, "func_fit": 40, "quad": 40, "version": [], "x11": [3, 42], "subsystem": [3, 42], "linux": [3, 42], "encourag": 3, "virtual": 3, "bash": 3, "virutu": 3, "venv": 3, "mkdir": 3, "cd": 3, "activ": [1, 3], "bin": 3, "pip": [38, 42, 47], "upgrad": 3, "almalinux": [], "headless": 3, "64": 3, "2021": 3, "qtpy": 3, "autopep8": [1, 3], "client": 3, "xvcsrv": [3, 42], "sourceforg": 3, "net": 3, "project": 3, "vcxsrv": 3, "scientif": 2, "softwar": [2, 48], "matlab": 2, "igor": 2, "characterist": 2, "flexibil": [], "qualiti": 2, "fulli": [], "inspir": [], "platform": 2, "raster": 2, "who": 2, "run": [], "unittest": [], "discov": [], "realli": 1, "thank": 1, "welcom": 1, "feedback": 1, "discuss": 1, "propos": 1, "maintain": 1, "pull": [], "request": [], "best": 1, "codebas": [], "fork": 1, "repo": 1, "branch": 1, "ve": 1, "ensur": 1, "sure": [1, 3], "pep8": 1, "issu": 1, "github": [1, 2, 3], "track": 1, "quick": 1, "background": 1, "expect": 1, "would": 1, "happen": 1, "possibli": 1, "why": 1, "think": 1, "might": 1, "stuff": 1, "tri": 1, "didn": 1, "agre": 1, "mit": [], "contribut": 2, "sphinx": 1, "restructuredtext": 1, "gplv3": 1, "lys_python": [], "fail": 42, "illustr": 42, "wsl": [3, 42], "server": 42, "clipboard": 42, "page": 42, "lys_clip": 42, "pyw": 42, "binari": 42, "ex": 42, "secur": [], "download": [3, 42], "succesfulli": 42, "xey": 3, "properli": 3, "overwrit": 31, "devel": [1, 2, 3], "particular": 3, "autom": [3, 48], "avail": [], "clone": 3, "git": 3, "aaa": [], "pytest": 47, "td": [], "aa": [], "78": 3, "2023": 3, "var_a": 46, "specialist": 46, "noth": 46, "alreadi": 46, "pleas": 46, "interpretr": 46, "somewher": 46, "varieti": 2, "cannot": 2, "achiev": 2, "pro": 2, "offer": 2, "lack": 2, "ecosystem": 2, "massiv": 2, "hundr": 2, "gigabit": 2, "coexist": 2, "proprietari": 2, "256": 38, "slidebar": 38, "cells3d": 48, "scikit": 48, "four": 38, "again": 38, "cov": 47, "coverag": 47}, "objects": {"lys": [[5, 0, 0, "-", "core"], [8, 0, 0, "-", "fitting"], [9, 0, 0, "-", "functions"], [32, 0, 0, "-", "widgets"]], "lys.core": [[5, 1, 1, "", "DaskWave"], [5, 1, 1, "", "SettingDict"], [5, 1, 1, "", "Wave"], [5, 1, 1, "", "WaveAxes"], [5, 1, 1, "", "WaveNote"]], "lys.core.DaskWave": [[5, 2, 1, "", "axes"], [5, 3, 1, "", "compute"], [5, 2, 1, "", "data"], [5, 3, 1, "", "duplicate"], [5, 3, 1, "", "initWorkers"], [5, 2, 1, "", "note"], [5, 3, 1, "", "persist"]], "lys.core.Wave": [[5, 3, 1, "", "SupportedFormats"], [5, 2, 1, "", "axes"], [5, 2, 1, "", "data"], [5, 3, 1, "", "duplicate"], [5, 3, 1, "", "export"], [5, 3, 1, "", "importFrom"], [5, 2, 1, "", "modified"], [5, 2, 1, "", "note"], [5, 3, 1, "", "update"]], "lys.core.WaveAxes": [[5, 3, 1, "", "getAxis"], [5, 3, 1, "", "pointToPos"], [5, 3, 1, "", "posToPoint"], [5, 4, 1, "", "x"], [5, 4, 1, "", "y"], [5, 4, 1, "", "z"]], "lys.core.WaveNote": [[5, 4, 1, "", "name"]], "lys.filters.filter": [[7, 0, 0, "-", "Convolution"], [7, 0, 0, "-", "Dask"], [7, 0, 0, "-", "Differentiate"], [7, 0, 0, "-", "FreeLine"], [7, 0, 0, "-", "Frequency"], [7, 0, 0, "-", "Integral"], [7, 0, 0, "-", "Interporation"], [7, 0, 0, "-", "MatrixMath"], [7, 0, 0, "-", "Region"], [7, 0, 0, "-", "Resize"], [7, 0, 0, "-", "Segmentation"], [7, 0, 0, "-", "Shift"], [7, 0, 0, "-", "SimpleMath"], [7, 0, 0, "-", "Smooth"], [7, 0, 0, "-", "Transform"]], "lys.filters.filter.Convolution": [[7, 1, 1, "", "LaplacianConvFilter"], [7, 1, 1, "", "PrewittFilter"], [7, 1, 1, "", "SobelFilter"]], "lys.filters.filter.Dask": [[7, 1, 1, "", "RechunkFilter"]], "lys.filters.filter.Dask.RechunkFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Differentiate": [[7, 1, 1, "", "GradientFilter"], [7, 1, 1, "", "LaplacianFilter"], [7, 1, 1, "", "NablaFilter"]], "lys.filters.filter.Differentiate.GradientFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Differentiate.LaplacianFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Differentiate.NablaFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.FreeLine": [[7, 1, 1, "", "FreeLineFilter"]], "lys.filters.filter.FreeLine.FreeLineFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.Frequency": [[7, 1, 1, "", "BandPassFilter"], [7, 1, 1, "", "BandStopFilter"], [7, 1, 1, "", "FourierFilter"], [7, 1, 1, "", "HighPassFilter"], [7, 1, 1, "", "LowPassFilter"]], "lys.filters.filter.Frequency.BandPassFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Frequency.BandStopFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Frequency.FourierFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Frequency.HighPassFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Frequency.LowPassFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Integral": [[7, 1, 1, "", "IntegralAllFilter"], [7, 1, 1, "", "IntegralCircleFilter"], [7, 1, 1, "", "IntegralFilter"]], "lys.filters.filter.Integral.IntegralAllFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.Integral.IntegralCircleFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.Integral.IntegralFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.Interporation": [[7, 1, 1, "", "InterpFilter"]], "lys.filters.filter.Interporation.InterpFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.MatrixMath": [[7, 1, 1, "", "IndexMathFilter"], [7, 1, 1, "", "SelectIndexFilter"], [7, 1, 1, "", "SliceFilter"], [7, 1, 1, "", "TransposeFilter"]], "lys.filters.filter.MatrixMath.IndexMathFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.MatrixMath.SelectIndexFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.MatrixMath.SliceFilter": [[7, 3, 1, "", "getParameters"], [7, 3, 1, "", "getRelativeDimension"]], "lys.filters.filter.MatrixMath.TransposeFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Region": [[7, 1, 1, "", "NormalizeFilter"], [7, 1, 1, "", "ReferenceNormalizeFilter"], [7, 1, 1, "", "SelectRegionFilter"]], "lys.filters.filter.Region.NormalizeFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Region.ReferenceNormalizeFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Region.SelectRegionFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Resize": [[7, 1, 1, "", "PaddingFilter"], [7, 1, 1, "", "ReduceSizeFilter"]], "lys.filters.filter.Resize.PaddingFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Resize.ReduceSizeFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Segmentation": [[7, 1, 1, "", "AdaptiveThresholdFilter"], [7, 1, 1, "", "ThresholdFilter"]], "lys.filters.filter.Segmentation.AdaptiveThresholdFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Segmentation.ThresholdFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Shift": [[7, 1, 1, "", "ReflectFilter"], [7, 1, 1, "", "ReverseFilter"], [7, 1, 1, "", "RollFilter"], [7, 1, 1, "", "ShiftFilter"]], "lys.filters.filter.Shift.ReflectFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Shift.ReverseFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Shift.RollFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Shift.ShiftFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.SimpleMath": [[7, 1, 1, "", "ComplexFilter"], [7, 1, 1, "", "NanToNumFilter"], [7, 1, 1, "", "PhaseFilter"], [7, 1, 1, "", "SimpleMathFilter"]], "lys.filters.filter.SimpleMath.ComplexFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.SimpleMath.NanToNumFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.SimpleMath.PhaseFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.SimpleMath.SimpleMathFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Smooth": [[7, 1, 1, "", "AverageFilter"], [7, 1, 1, "", "GaussianFilter"], [7, 1, 1, "", "MedianFilter"], [7, 1, 1, "", "RemoveImpulsiveNoise"]], "lys.filters.filter.Smooth.AverageFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Smooth.GaussianFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Smooth.MedianFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Smooth.RemoveImpulsiveNoise": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform": [[7, 1, 1, "", "AxisShiftFilter"], [7, 1, 1, "", "MagnificationFilter"], [7, 1, 1, "", "MirrorFilter"], [7, 1, 1, "", "OffsetFilter"], [7, 1, 1, "", "Rotation2DFilter"], [7, 1, 1, "", "SetAxisFilter"], [7, 1, 1, "", "SymmetrizeFilter"]], "lys.filters.filter.Transform.AxisShiftFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.MagnificationFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.MirrorFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.OffsetFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.Rotation2DFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.SetAxisFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters.filter.Transform.SymmetrizeFilter": [[7, 3, 1, "", "getParameters"]], "lys.filters": [[6, 0, 0, "-", "filtersGUI"], [6, 0, 0, "-", "function"], [6, 0, 0, "-", "interface"]], "lys.filters.filtersGUI": [[6, 1, 1, "", "FiltersGUI"]], "lys.filters.filtersGUI.FiltersGUI": [[6, 3, 1, "", "clear"], [6, 3, 1, "", "getFilters"], [6, 3, 1, "", "setDimension"], [6, 3, 1, "", "setFilters"]], "lys.filters.function": [[6, 5, 1, "", "addFilter"], [6, 5, 1, "", "fromFile"], [6, 5, 1, "", "fromString"], [6, 5, 1, "", "fromWave"], [6, 5, 1, "", "getFilter"], [6, 5, 1, "", "toFile"], [6, 5, 1, "", "toString"]], "lys.filters.interface": [[6, 1, 1, "", "FilterInterface"], [6, 1, 1, "", "FilterSettingBase"], [6, 1, 1, "", "Filters"], [6, 5, 1, "", "filterGUI"]], "lys.filters.interface.FilterInterface": [[6, 3, 1, "", "execute"], [6, 3, 1, "", "getParameters"], [6, 3, 1, "", "getRelativeDimension"], [6, 3, 1, "", "saveAsFile"]], "lys.filters.interface.FilterSettingBase": [[6, 3, 1, "", "GetFilter"], [6, 2, 1, "", "dimensionChanged"], [6, 3, 1, "", "getDimension"], [6, 3, 1, "", "getFilterClass"], [6, 3, 1, "", "getParameters"], [6, 3, 1, "", "setParameters"]], "lys.filters.interface.Filters": [[6, 3, 1, "", "append"], [6, 3, 1, "", "fromFile"], [6, 3, 1, "", "fromString"], [6, 3, 1, "", "fromWave"], [6, 3, 1, "", "getFilters"], [6, 3, 1, "", "getParameters"], [6, 3, 1, "", "getRelativeDimension"], [6, 3, 1, "", "insert"], [6, 3, 1, "", "isEmpty"], [6, 3, 1, "", "saveAsFile"], [6, 3, 1, "", "toString"]], "lys.fitting": [[8, 0, 0, "-", "Functions"], [8, 5, 1, "", "addFittingFunction"]], "lys.fitting.Functions": [[8, 5, 1, "", "const"], [8, 5, 1, "", "cos"], [8, 5, 1, "", "doubleExp"], [8, 5, 1, "", "error"], [8, 5, 1, "", "exp"], [8, 5, 1, "", "gauss"], [8, 5, 1, "", "linear"], [8, 5, 1, "", "lorentz"], [8, 5, 1, "", "quadratic"], [8, 5, 1, "", "relaxOsci"], [8, 5, 1, "", "step"], [8, 5, 1, "", "stepExp"]], "lys.functions": [[9, 5, 1, "", "append"], [9, 5, 1, "", "display"], [9, 5, 1, "", "edit"], [9, 5, 1, "", "frontCanvas"], [9, 5, 1, "", "home"], [9, 5, 1, "", "load"], [9, 5, 1, "", "loadableFiles"], [9, 5, 1, "", "lysPath"], [9, 5, 1, "", "multicut"], [9, 5, 1, "", "registerFileLoader"], [9, 5, 1, "", "registerFittingFunction"]], "lys.glb": [[10, 0, 0, "-", "MainWindow"], [10, 0, 0, "-", "shell"]], "lys.glb.MainWindow": [[10, 1, 1, "", "MainWindow"]], "lys.glb.MainWindow.MainWindow": [[10, 2, 1, "", "beforeClosed"], [10, 3, 1, "", "closeAllGraphs"], [10, 3, 1, "", "closeEvent"], [10, 2, 1, "", "closed"], [10, 4, 1, "", "fileView"], [10, 3, 1, "", "tabWidget"]], "lys.glb.shell": [[10, 1, 1, "", "ExtendShell"]], "lys.glb.shell.ExtendShell": [[10, 3, 1, "", "addObject"], [10, 2, 1, "", "commandExecuted"], [10, 4, 1, "", "commandLog"], [10, 4, 1, "", "dict"], [10, 3, 1, "", "eval"], [10, 3, 1, "", "exec"], [10, 3, 1, "", "importAll"], [10, 3, 1, "", "importModule"], [10, 3, 1, "", "refresh"]], "lys.mcut": [[31, 0, 0, "-", "CanvasManager"], [31, 0, 0, "-", "MultiCutGUI"]], "lys.mcut.CanvasManager": [[31, 1, 1, "", "CanvasManager"]], "lys.mcut.CanvasManager.CanvasManager": [[31, 3, 1, "", "addAnnotations"], [31, 3, 1, "", "addCross"], [31, 3, 1, "", "addFreeLine"], [31, 3, 1, "", "addLine"], [31, 3, 1, "", "addRect"], [31, 3, 1, "", "addRegion"], [31, 3, 1, "", "clear"], [31, 3, 1, "", "createCanvas"], [31, 3, 1, "", "getAnnotations"], [31, 3, 1, "", "interactiveWidget"]], "lys.mcut.MultiCutCUI": [[31, 1, 1, "", "AxesRangeManager"], [31, 1, 1, "", "ChildWaves"], [31, 1, 1, "", "FreeLineManager"], [31, 1, 1, "", "MultiCutCUI"], [31, 1, 1, "", "MultiCutWave"]], "lys.mcut.MultiCutCUI.AxesRangeManager": [[31, 2, 1, "", "axesRangeChanged"], [31, 3, 1, "", "getAxisRange"], [31, 3, 1, "", "getAxisRangeType"], [31, 3, 1, "", "loadFromDictionary"], [31, 3, 1, "", "reset"], [31, 3, 1, "", "saveAsDictionary"], [31, 3, 1, "", "setAxisRange"]], "lys.mcut.MultiCutCUI.ChildWaves": [[31, 3, 1, "", "addWave"], [31, 2, 1, "", "childWavesChanged"], [31, 3, 1, "", "clear"], [31, 4, 1, "", "cui"], [31, 3, 1, "", "getChildWaves"], [31, 3, 1, "", "loadFromDictionary"], [31, 3, 1, "", "remove"], [31, 3, 1, "", "saveAsDictionary"], [31, 3, 1, "", "setSumType"]], "lys.mcut.MultiCutCUI.FreeLineManager": [[31, 3, 1, "", "addFreeLine"], [31, 3, 1, "", "clear"], [31, 2, 1, "", "freeLineChanged"], [31, 2, 1, "", "freeLineMoved"], [31, 3, 1, "", "getFreeLine"], [31, 3, 1, "", "getFreeLines"], [31, 3, 1, "", "loadFromDictionary"], [31, 3, 1, "", "removeFreeLine"], [31, 3, 1, "", "saveAsDictionary"]], "lys.mcut.MultiCutCUI.MultiCutCUI": [[31, 3, 1, "", "loadFromDictionary"], [31, 3, 1, "", "saveAsDictionary"]], "lys.mcut.MultiCutCUI.MultiCutWave": [[31, 3, 1, "", "applyFilter"], [31, 2, 1, "", "dimensionChanged"], [31, 2, 1, "", "filterApplied"], [31, 3, 1, "", "getFilteredWave"], [31, 3, 1, "", "getRawWave"], [31, 3, 1, "", "useDask"]], "lys.mcut.MultiCutGUI": [[31, 1, 1, "", "MultiCut"]], "lys.mcut.MultiCutGUI.MultiCut": [[31, 2, 1, "", "closed"], [31, 4, 1, "", "cui"], [31, 3, 1, "", "display"], [31, 3, 1, "", "loadFromDictionary"], [31, 3, 1, "", "openMultiCutSetting"], [31, 3, 1, "", "saveAsDictionary"]], "lys.widgets.canvas.GraphWindow": [[4, 1, 1, "", "lysCanvas"]], "lys.widgets.canvas.interface": [[11, 0, 0, "-", "Annotation"], [12, 0, 0, "-", "AnnotationData"], [13, 0, 0, "-", "Area"], [14, 0, 0, "-", "Axes"], [15, 0, 0, "-", "AxisLabel"], [16, 0, 0, "-", "CanvasBase"], [17, 0, 0, "-", "Contour"], [18, 0, 0, "-", "CrossAnnotation"], [19, 0, 0, "-", "Data"], [20, 0, 0, "-", "Events"], [21, 0, 0, "-", "Image"], [22, 0, 0, "-", "Legend"], [23, 0, 0, "-", "Line"], [24, 0, 0, "-", "LineAnnotation"], [25, 0, 0, "-", "RGB"], [26, 0, 0, "-", "RectAnnotation"], [27, 0, 0, "-", "RegionAnnotation"], [28, 0, 0, "-", "TextAnnotation"], [29, 0, 0, "-", "Vector"], [30, 0, 0, "-", "WaveData"]], "lys.widgets.canvas.interface.Annotation": [[11, 1, 1, "", "CanvasAnnotation"]], "lys.widgets.canvas.interface.Annotation.CanvasAnnotation": [[11, 3, 1, "", "addCrossAnnotation"], [11, 3, 1, "", "addFreeRegionAnnotation"], [11, 3, 1, "", "addInfiniteLineAnnotation"], [11, 3, 1, "", "addLineAnnotation"], [11, 3, 1, "", "addRectAnnotation"], [11, 3, 1, "", "addRegionAnnotation"], [11, 3, 1, "", "addText"], [11, 2, 1, "", "annotationChanged"], [11, 3, 1, "", "getAnnotations"], [11, 3, 1, "", "getCrossAnnotations"], [11, 3, 1, "", "getFreeRegionAnnotations"], [11, 3, 1, "", "getInfiniteLineAnnotations"], [11, 3, 1, "", "getLineAnnotations"], [11, 3, 1, "", "getRectAnnotations"], [11, 3, 1, "", "getRegionAnnotations"], [11, 3, 1, "", "getTextAnnotations"], [11, 3, 1, "", "removeAnnotation"]], "lys.widgets.canvas.interface.AnnotationData": [[12, 1, 1, "", "AnnotationData"], [12, 1, 1, "", "AnnotationWithLine"]], "lys.widgets.canvas.interface.AnnotationData.AnnotationData": [[12, 3, 1, "", "getAxis"], [12, 3, 1, "", "getName"], [12, 3, 1, "", "getVisible"], [12, 3, 1, "", "getZOrder"], [12, 3, 1, "", "loadAppearance"], [12, 3, 1, "", "saveAppearance"], [12, 3, 1, "", "setName"], [12, 3, 1, "", "setVisible"], [12, 3, 1, "", "setZOrder"]], "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine": [[12, 3, 1, "", "getLineColor"], [12, 3, 1, "", "getLineStyle"], [12, 3, 1, "", "getLineWidth"], [12, 3, 1, "", "setLineColor"], [12, 3, 1, "", "setLineStyle"], [12, 3, 1, "", "setLineWidth"]], "lys.widgets.canvas.interface.Area": [[13, 1, 1, "", "CanvasMargin"], [13, 1, 1, "", "CanvasSize"]], "lys.widgets.canvas.interface.Area.CanvasMargin": [[13, 3, 1, "", "getMargin"], [13, 2, 1, "", "marginChanged"], [13, 3, 1, "", "refreshMargin"], [13, 3, 1, "", "setMargin"]], "lys.widgets.canvas.interface.Area.CanvasSize": [[13, 2, 1, "", "canvasResized"], [13, 3, 1, "", "getCanvasSize"], [13, 3, 1, "", "getSizeParams"], [13, 3, 1, "", "parentResized"], [13, 3, 1, "", "refreshCanvasSize"], [13, 3, 1, "", "setCanvasSize"]], "lys.widgets.canvas.interface.Axes": [[14, 1, 1, "", "CanvasAxes"], [14, 1, 1, "", "CanvasTicks"]], "lys.widgets.canvas.interface.Axes.CanvasAxes": [[14, 3, 1, "", "addAxis"], [14, 2, 1, "", "axisChanged"], [14, 3, 1, "", "axisIsValid"], [14, 3, 1, "", "axisList"], [14, 2, 1, "", "axisRangeChanged"], [14, 3, 1, "", "clearSelectedRange"], [14, 3, 1, "", "getAxisColor"], [14, 3, 1, "", "getAxisMode"], [14, 3, 1, "", "getAxisRange"], [14, 3, 1, "", "getAxisThick"], [14, 3, 1, "", "getMirrorAxis"], [14, 3, 1, "", "isAutoScaled"], [14, 3, 1, "", "isRangeSelected"], [14, 3, 1, "", "selectedRange"], [14, 2, 1, "", "selectedRangeChanged"], [14, 3, 1, "", "setAutoScaleAxis"], [14, 3, 1, "", "setAxisColor"], [14, 3, 1, "", "setAxisMode"], [14, 3, 1, "", "setAxisRange"], [14, 3, 1, "", "setAxisThick"], [14, 3, 1, "", "setMirrorAxis"], [14, 3, 1, "", "setSelectedRange"]], "lys.widgets.canvas.interface.Axes.CanvasTicks": [[14, 3, 1, "", "getTickDirection"], [14, 3, 1, "", "getTickInterval"], [14, 3, 1, "", "getTickLength"], [14, 3, 1, "", "getTickVisible"], [14, 3, 1, "", "getTickWidth"], [14, 3, 1, "", "setTickDirection"], [14, 3, 1, "", "setTickInterval"], [14, 3, 1, "", "setTickLength"], [14, 3, 1, "", "setTickVisible"], [14, 3, 1, "", "setTickWidth"]], "lys.widgets.canvas.interface.AxisLabel": [[15, 1, 1, "", "CanvasAxisLabel"], [15, 1, 1, "", "CanvasTickLabel"]], "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel": [[15, 3, 1, "", "getAxisLabel"], [15, 3, 1, "", "getAxisLabelCoords"], [15, 3, 1, "", "getAxisLabelFont"], [15, 3, 1, "", "getAxisLabelVisible"], [15, 3, 1, "", "setAxisLabel"], [15, 3, 1, "", "setAxisLabelCoords"], [15, 3, 1, "", "setAxisLabelFont"], [15, 3, 1, "", "setAxisLabelVisible"]], "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel": [[15, 3, 1, "", "getTickLabelFont"], [15, 3, 1, "", "getTickLabelVisible"], [15, 3, 1, "", "setTickLabelFont"], [15, 3, 1, "", "setTickLabelVisible"]], "lys.widgets.canvas.interface.CanvasBase": [[16, 1, 1, "", "CanvasBase"], [16, 1, 1, "", "CanvasPart"], [16, 5, 1, "", "disableSaveCanvas"], [16, 5, 1, "", "saveCanvas"]], "lys.widgets.canvas.interface.CanvasBase.CanvasBase": [[16, 3, 1, "", "LoadFromDictionary"], [16, 3, 1, "", "SaveAsDictionary"], [16, 3, 1, "", "addCanvasPart"], [16, 3, 1, "", "dataTypes"], [16, 3, 1, "", "delayUpdate"], [16, 3, 1, "", "finalize"], [16, 2, 1, "", "finalized"], [16, 2, 1, "", "initCanvas"], [16, 2, 1, "", "loadCanvas"], [16, 2, 1, "", "saveCanvas"], [16, 2, 1, "", "updated"]], "lys.widgets.canvas.interface.CanvasBase.CanvasPart": [[16, 3, 1, "", "canvas"]], "lys.widgets.canvas.interface.Contour": [[17, 1, 1, "", "ContourData"]], "lys.widgets.canvas.interface.Contour.ContourData": [[17, 3, 1, "", "getColor"], [17, 3, 1, "", "getLevel"], [17, 3, 1, "", "getStyle"], [17, 3, 1, "", "getWidth"], [17, 3, 1, "", "setColor"], [17, 3, 1, "", "setLevel"], [17, 3, 1, "", "setStyle"], [17, 3, 1, "", "setWidth"]], "lys.widgets.canvas.interface.CrossAnnotation": [[18, 1, 1, "", "CrossAnnotation"]], "lys.widgets.canvas.interface.CrossAnnotation.CrossAnnotation": [[18, 3, 1, "", "getPosition"], [18, 2, 1, "", "positionChanged"], [18, 3, 1, "", "setPosition"]], "lys.widgets.canvas.interface.Data": [[19, 1, 1, "", "CanvasData"]], "lys.widgets.canvas.interface.Data.CanvasData": [[19, 3, 1, "", "Append"], [19, 3, 1, "", "Clear"], [19, 3, 1, "", "Remove"], [19, 2, 1, "", "dataChanged"], [19, 3, 1, "", "getContours"], [19, 3, 1, "", "getImages"], [19, 3, 1, "", "getLines"], [19, 3, 1, "", "getRGBs"], [19, 3, 1, "", "getVectorFields"], [19, 3, 1, "", "getWaveData"]], "lys.widgets.canvas.interface.Events": [[20, 1, 1, "", "CanvasFocusEvent"], [20, 1, 1, "", "CanvasKeyboardEvent"], [20, 1, 1, "", "CanvasMouseEvent"], [20, 5, 1, "", "getFrontCanvas"]], "lys.widgets.canvas.interface.Events.CanvasFocusEvent": [[20, 2, 1, "", "focused"]], "lys.widgets.canvas.interface.Events.CanvasKeyboardEvent": [[20, 2, 1, "", "keyPressed"]], "lys.widgets.canvas.interface.Events.CanvasMouseEvent": [[20, 2, 1, "", "clicked"], [20, 2, 1, "", "doubleClicked"], [20, 3, 1, "", "mapPosition"], [20, 2, 1, "", "mouseMoved"], [20, 2, 1, "", "mousePressed"], [20, 2, 1, "", "mouseReleased"]], "lys.widgets.canvas.interface.Image": [[21, 1, 1, "", "ImageData"]], "lys.widgets.canvas.interface.Image.ImageData": [[21, 3, 1, "", "getAutoColorRange"], [21, 3, 1, "", "getColorRange"], [21, 3, 1, "", "getColorbarDirection"], [21, 3, 1, "", "getColorbarPosition"], [21, 3, 1, "", "getColorbarSize"], [21, 3, 1, "", "getColorbarVisible"], [21, 3, 1, "", "getColormap"], [21, 3, 1, "", "getGamma"], [21, 3, 1, "", "getOpacity"], [21, 3, 1, "", "isLog"], [21, 3, 1, "", "setColorRange"], [21, 3, 1, "", "setColorbarDirection"], [21, 3, 1, "", "setColorbarPosition"], [21, 3, 1, "", "setColorbarSize"], [21, 3, 1, "", "setColorbarVisible"], [21, 3, 1, "", "setColormap"], [21, 3, 1, "", "setGamma"], [21, 3, 1, "", "setLog"], [21, 3, 1, "", "setOpacity"]], "lys.widgets.canvas.interface.Legend": [[22, 1, 1, "", "CanvasLegend"]], "lys.widgets.canvas.interface.Legend.CanvasLegend": [[22, 3, 1, "", "getLegendFont"], [22, 3, 1, "", "getLegendFrameVisible"], [22, 3, 1, "", "getLegendPosition"], [22, 2, 1, "", "legendPositionChanged"], [22, 3, 1, "", "setLegendFont"], [22, 3, 1, "", "setLegendFrameVisible"], [22, 3, 1, "", "setLegendPosition"]], "lys.widgets.canvas.interface.Line": [[23, 1, 1, "", "LineData"]], "lys.widgets.canvas.interface.Line.LineData": [[23, 3, 1, "", "getCapSize"], [23, 3, 1, "", "getColor"], [23, 3, 1, "", "getErrorbar"], [23, 3, 1, "", "getLegendLabel"], [23, 3, 1, "", "getLegendVisible"], [23, 3, 1, "", "getMarker"], [23, 3, 1, "", "getMarkerFilling"], [23, 3, 1, "", "getMarkerSize"], [23, 3, 1, "", "getMarkerThick"], [23, 3, 1, "", "getStyle"], [23, 3, 1, "", "getWidth"], [23, 3, 1, "", "setCapSize"], [23, 3, 1, "", "setColor"], [23, 3, 1, "", "setErrorbar"], [23, 3, 1, "", "setLegendLabel"], [23, 3, 1, "", "setLegendVisible"], [23, 3, 1, "", "setMarker"], [23, 3, 1, "", "setMarkerFilling"], [23, 3, 1, "", "setMarkerSize"], [23, 3, 1, "", "setMarkerThick"], [23, 3, 1, "", "setStyle"], [23, 3, 1, "", "setWidth"]], "lys.widgets.canvas.interface.LineAnnotation": [[24, 1, 1, "", "InfiniteLineAnnotation"], [24, 1, 1, "", "LineAnnotation"]], "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation": [[24, 3, 1, "", "getOrientation"], [24, 3, 1, "", "getPosition"], [24, 2, 1, "", "positionChanged"], [24, 3, 1, "", "setPosition"]], "lys.widgets.canvas.interface.LineAnnotation.LineAnnotation": [[24, 3, 1, "", "getPosition"], [24, 2, 1, "", "positionChanged"], [24, 3, 1, "", "setPosition"]], "lys.widgets.canvas.interface.RGB": [[25, 1, 1, "", "RGBData"]], "lys.widgets.canvas.interface.RGB.RGBData": [[25, 3, 1, "", "getAutoColorRange"], [25, 3, 1, "", "getColorRange"], [25, 3, 1, "", "getColorRotation"], [25, 3, 1, "", "getColormapData"], [25, 3, 1, "", "getColormapPosition"], [25, 3, 1, "", "getColormapSize"], [25, 3, 1, "", "getColormapVisible"], [25, 3, 1, "", "getRGBWave"], [25, 3, 1, "", "setColorRange"], [25, 3, 1, "", "setColorRotation"], [25, 3, 1, "", "setColormapPosition"], [25, 3, 1, "", "setColormapSize"], [25, 3, 1, "", "setColormapVisible"]], "lys.widgets.canvas.interface.RectAnnotation": [[26, 1, 1, "", "RectAnnotation"]], "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation": [[26, 3, 1, "", "getPosition"], [26, 3, 1, "", "getRegion"], [26, 3, 1, "", "getSize"], [26, 2, 1, "", "regionChanged"], [26, 3, 1, "", "setRegion"]], "lys.widgets.canvas.interface.RegionAnnotation": [[27, 1, 1, "", "FreeRegionAnnotation"], [27, 1, 1, "", "RegionAnnotation"]], "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation": [[27, 3, 1, "", "getRegion"], [27, 3, 1, "", "getWidth"], [27, 2, 1, "", "regionChanged"], [27, 3, 1, "", "setRegion"], [27, 3, 1, "", "setWidth"], [27, 2, 1, "", "widthChanged"]], "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation": [[27, 3, 1, "", "getOrientation"], [27, 3, 1, "", "getRegion"], [27, 2, 1, "", "regionChanged"], [27, 3, 1, "", "setRegion"]], "lys.widgets.canvas.interface.TextAnnotation": [[28, 1, 1, "", "TextAnnotation"]], "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation": [[28, 2, 1, "", "edited"], [28, 3, 1, "", "getBoxColor"], [28, 3, 1, "", "getBoxStyle"], [28, 3, 1, "", "getFont"], [28, 3, 1, "", "getPosition"], [28, 3, 1, "", "getText"], [28, 3, 1, "", "getTransform"], [28, 3, 1, "", "setBoxColor"], [28, 3, 1, "", "setBoxStyle"], [28, 3, 1, "", "setFont"], [28, 3, 1, "", "setPosition"], [28, 3, 1, "", "setText"], [28, 3, 1, "", "setTransform"]], "lys.widgets.canvas.interface.Vector": [[29, 1, 1, "", "VectorData"]], "lys.widgets.canvas.interface.Vector.VectorData": [[29, 3, 1, "", "getAutoScale"], [29, 3, 1, "", "getColor"], [29, 3, 1, "", "getPivot"], [29, 3, 1, "", "getScale"], [29, 3, 1, "", "getWidth"], [29, 3, 1, "", "setColor"], [29, 3, 1, "", "setPivot"], [29, 3, 1, "", "setScale"], [29, 3, 1, "", "setWidth"]], "lys.widgets.canvas.interface.WaveData": [[30, 1, 1, "", "WaveData"]], "lys.widgets.canvas.interface.WaveData.WaveData": [[30, 3, 1, "", "getAxis"], [30, 3, 1, "", "getFilter"], [30, 3, 1, "", "getFilteredWave"], [30, 3, 1, "", "getName"], [30, 3, 1, "", "getOffset"], [30, 3, 1, "", "getVisible"], [30, 3, 1, "", "getWave"], [30, 3, 1, "", "getZOrder"], [30, 3, 1, "", "loadAppearance"], [30, 2, 1, "", "modified"], [30, 3, 1, "", "saveAppearance"], [30, 3, 1, "", "setFilter"], [30, 3, 1, "", "setName"], [30, 3, 1, "", "setOffset"], [30, 3, 1, "", "setVisible"], [30, 3, 1, "", "setZOrder"]], "lys.widgets": [[33, 0, 0, "-", "fileView"], [32, 0, 0, "-", "general"], [34, 0, 0, "-", "mdi"]], "lys.widgets.fileView": [[33, 1, 1, "", "FileSystemView"]], "lys.widgets.fileView.FileSystemView": [[33, 3, 1, "", "registerFileMenu"], [33, 3, 1, "", "selectedPath"], [33, 3, 1, "", "selectedPaths"], [33, 2, 1, "", "selectionChanged"], [33, 3, 1, "", "setPath"]], "lys.widgets.general": [[32, 1, 1, "", "AxesSelectionDialog"], [32, 1, 1, "", "AxisCheckLayout"], [32, 1, 1, "", "AxisSelectionLayout"], [32, 1, 1, "", "ColorSelection"], [32, 1, 1, "", "ColormapSelection"], [32, 1, 1, "", "IndiceSelectionLayout"], [32, 1, 1, "", "RegionSelectWidget"], [32, 1, 1, "", "ScientificSpinBox"], [32, 1, 1, "", "kernelSigmaLayout"], [32, 1, 1, "", "kernelSizeLayout"]], "lys.widgets.general.AxesSelectionDialog": [[32, 3, 1, "", "getAxes"], [32, 3, 1, "", "setDimension"]], "lys.widgets.general.AxisCheckLayout": [[32, 3, 1, "", "GetChecked"], [32, 3, 1, "", "SetChecked"], [32, 2, 1, "", "stateChanged"]], "lys.widgets.general.AxisSelectionLayout": [[32, 2, 1, "", "axisChanged"], [32, 3, 1, "", "getAxis"], [32, 3, 1, "", "setAxis"], [32, 3, 1, "", "setDimension"], [32, 3, 1, "", "setEnabled"]], "lys.widgets.general.ColorSelection": [[32, 2, 1, "", "colorChanged"], [32, 3, 1, "", "getColor"], [32, 3, 1, "", "getColorAsArray"], [32, 3, 1, "", "setColor"]], "lys.widgets.general.ColormapSelection": [[32, 2, 1, "", "colorChanged"], [32, 3, 1, "", "currentColor"], [32, 3, 1, "", "currentColorMaps"], [32, 3, 1, "", "gamma"], [32, 3, 1, "", "isLog"], [32, 3, 1, "", "opacity"], [32, 3, 1, "", "setColormap"], [32, 3, 1, "", "setEnabled"], [32, 3, 1, "", "setGamma"], [32, 3, 1, "", "setLog"], [32, 3, 1, "", "setOpacity"]], "lys.widgets.general.IndiceSelectionLayout": [[32, 3, 1, "", "getIndices"], [32, 3, 1, "", "setEnabled"], [32, 3, 1, "", "setShape"], [32, 3, 1, "", "setValues"], [32, 2, 1, "", "valueChanged"]], "lys.widgets.general.RegionSelectWidget": [[32, 3, 1, "", "getChecked"], [32, 3, 1, "", "getRegion"], [32, 3, 1, "", "setChecked"], [32, 3, 1, "", "setRegion"], [32, 2, 1, "", "stateChanged"]], "lys.widgets.general.ScientificSpinBox": [[32, 3, 1, "", "stepBy"], [32, 3, 1, "", "textFromValue"], [32, 3, 1, "", "validate"], [32, 3, 1, "", "valueFromText"]], "lys.widgets.general.kernelSigmaLayout": [[32, 3, 1, "", "getKernelSigma"], [32, 3, 1, "", "setKernelSigma"]], "lys.widgets.general.kernelSizeLayout": [[32, 3, 1, "", "getKernelSize"], [32, 3, 1, "", "setKernelSize"]], "lys.widgets.mdi": [[34, 1, 1, "", "LysSubWindow"]], "lys.widgets.mdi.LysSubWindow": [[34, 3, 1, "", "attach"], [34, 3, 1, "", "attachTo"], [34, 3, 1, "", "closeEvent"], [34, 2, 1, "", "closed"], [34, 3, 1, "", "eventFilter"], [34, 2, 1, "", "focused"], [34, 3, 1, "", "isFloating"], [34, 2, 1, "", "loaded"], [34, 3, 1, "", "moveEvent"], [34, 2, 1, "", "moveFinished"], [34, 2, 1, "", "moved"], [34, 3, 1, "", "resizeEvent"], [34, 2, 1, "", "resizeFinished"], [34, 2, 1, "", "resized"], [34, 3, 1, "", "restoreSettings"], [34, 3, 1, "", "saveSettings"], [34, 2, 1, "", "saved"], [34, 3, 1, "", "setSettingFile"], [34, 3, 1, "", "setTitleColor"], [34, 4, 1, "", "titleColor"]], "lys.widgets.table": [[35, 0, 0, "-", "Data"], [35, 0, 0, "-", "lysTable"]], "lys.widgets.table.Data": [[35, 1, 1, "", "TableData"]], "lys.widgets.table.Data.TableData": [[35, 2, 1, "", "dataChanged"], [35, 2, 1, "", "dataSaved"], [35, 3, 1, "", "getData"], [35, 3, 1, "", "getSlice"], [35, 3, 1, "", "getSlicedData"], [35, 3, 1, "", "save"], [35, 3, 1, "", "setData"], [35, 3, 1, "", "setSlice"], [35, 2, 1, "", "updated"]], "lys.widgets.table.lysTable": [[35, 1, 1, "", "lysTable"]], "lys.widgets.table.lysTable.lysTable": [[35, 3, 1, "", "closeEvent"], [35, 2, 1, "", "finalized"], [35, 3, 1, "", "keyPressEvent"], [35, 2, 1, "", "keyPressed"], [35, 3, 1, "", "loadFromDictionary"], [35, 2, 1, "", "loadTable"], [35, 3, 1, "", "openModifyWindow"], [35, 3, 1, "", "saveAsDictionary"], [35, 2, 1, "", "saveTable"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"python": [0, 39], "api": 0, "annot": 11, "modul": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "annotationdata": 12, "area": 13, "ax": 14, "axislabel": 15, "canvasbas": 16, "contour": [17, 49], "crossannot": 18, "data": [4, 19, 38, 40, 45, 49, 50], "event": 20, "imag": [21, 38, 49], "line": [23, 43, 49], "lineannot": 24, "rgb": [25, 49], "rectannot": 26, "regionannot": 27, "textannot": 28, "vector": [29, 42, 49], "wavedata": 30, "ly": [2, 7, 39, 42, 46, 50], "document": 2, "content": 2, "packag": [], "analysi": [37, 43], "subpackag": [], "submodul": [], "multicut": [31, 37, 43], "multicutexecutor": [], "multicutgui": [], "animationtab": [], "cuttab": [], "exportdatatab": [], "prefiltertab": [], "basicwidget": [], "fittingwindow": [], "graphwindow": [], "canvasinterfac": [], "base": 4, "class": 4, "canva": 4, "compon": 4, "interfac": [4, 6], "fit": [8, 40], "fittingwidget": [], "function": [6, 8, 9, 39, 40], "lineprofil": [], "filter": [6, 7, 37, 43, 44], "filteriogui": [], "filtermanag": [], "filtersgui": [], "commonwidget": [], "convolut": [], "dask": [44, 45], "differenti": [], "filterinterfac": [], "findpeak": [], "freelin": [], "frequenc": [], "integr": [], "interpor": [], "matrixmath": [], "region": 40, "resiz": [], "segment": [], "shift": [], "simplemath": [], "smooth": [], "transform": [], "fileview": 33, "mainwindow": [], "core": 5, "glb": 10, "shell": [10, 46], "task": [], "widget": [4, 32], "gui": [6, 31, 36, 43, 44], "list": [6, 8], "implement": 44, "pre": [6, 8], "defin": [6, 8, 39], "tutori": 48, "ad": 44, "new": [36, 39, 40], "legend": 22, "us": [4, 39, 43], "annotationsss": 4, "main": 10, "window": [10, 36], "lyscanva": 4, "lyssubwindow": 34, "special": 32, "gener": 32, "lystabl": 35, "tabl": [], "cui": 31, "multicutcui": [], "load": 45, "file": 45, "type": 49, "basic": 48, "requir": [3, 48], "all": 48, "user": 48, "advanc": [37, 48], "read": 48, "i": 48, "need": 48, "introduct": 41, "hybrid": [], "program": [], "interpret": 39, "flowchart": [], "further": [], "displai": [38, 49, 50], "graph": [42, 50], "interact": 43, "system": [3, 43], "understand": 46, "import": 37, "plot": [40, 50], "an": 50, "1d": [40, 50], "make": [43, 50], "public": [43, 50], "qualiti": [43, 50], "matplotlib": 50, "save": 50, "export": [37, 50], "variou": 49, "default": 43, "templat": 43, "manual": 43, "setup": 43, "cut": 43, "along": 43, "free": 43, "appli": 43, "postprocess": 43, "your": [37, 43, 44, 45], "own": 43, "creat": [37, 43], "figur": 43, "instal": [3, 42], "anim": 37, "custom": 36, "add": [36, 40, 44], "tab": 36, "sidebar": 36, "menu": 36, "context": [], "veri": 44, "simpl": 44, "parallel": [37, 44], "comput": [37, 44], "csv": 45, "usag": [37, 42], "origin": 44, "complex": 49, "field": 49, "reproduc": 37, "limit": 40, "parametor": [], "paramet": 40, "befor": [3, 47], "librari": 3, "version": 3, "test": [1, 47], "unittest": [], "contribut": 1, "pullrequest": [], "report": 1, "bug": 1, "licens": 1, "pull": 1, "request": 1, "copi": 42, "from": [3, 42], "graphic": 42, "softwar": 42, "tip": 48, "pip": 3, "recommend": 3, "sourc": 3, "autom": [1, 47], "cells3d": 38, "scikit": 38, "exampl": 48, "galleri": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "Contributing": [[1, "contributing"]], "Report bugs": [[1, "report-bugs"]], "Pull requests": [[1, "pull-requests"]], "Automated test": [[1, "automated-test"], [47, "automated-test"]], "License": [[1, "license"]], "lys documentation": [[2, "lys-documentation"]], "Contents:": [[2, null]], "Installation": [[3, "installation"], [42, "installation"]], "System requirements": [[3, "system-requirements"]], "Before installation": [[3, "before-installation"]], "Installation from pip (recommended)": [[3, "installation-from-pip-recommended"]], "Installation from source (not recommended)": [[3, "installation-from-source-not-recommended"]], "Library version": [[3, "library-version"]], "lysCanvas": [[4, "lyscanvas"]], "Base class of canvas": [[4, "base-class-of-canvas"]], "Components of canvas": [[4, "components-of-canvas"]], "Interface to data": [[4, "interface-to-data"]], "Interface to annotationsss": [[4, "interface-to-annotationsss"]], "Use canvas as widget": [[4, "use-canvas-as-widget"]], "core module": [[5, "module-lys.core"]], "filters module": [[6, "filters-module"]], "List of pre-defined filters": [[6, "list-of-pre-defined-filters"]], "Functions": [[6, "module-lys.filters.function"]], "Interfaces": [[6, "module-lys.filters.interface"]], "GUI": [[6, "module-lys.filters.filtersGUI"]], "Filters in lys.filters": [[7, "module-lys.filters.filter.Convolution"]], "fitting module": [[8, "module-lys.fitting"]], "List of pre-defined fitting functions": [[8, "module-lys.fitting.Functions"]], "functions module": [[9, "module-lys.functions"]], "glb module": [[10, "glb-module"]], "Shell": [[10, "module-lys.glb.shell"]], "Main Window": [[10, "module-lys.glb.MainWindow"]], "Annotation module": [[11, "module-lys.widgets.canvas.interface.Annotation"]], "AnnotationData module": [[12, "module-lys.widgets.canvas.interface.AnnotationData"]], "Area module": [[13, "module-lys.widgets.canvas.interface.Area"]], "Axes module": [[14, "module-lys.widgets.canvas.interface.Axes"]], "AxisLabel module": [[15, "module-lys.widgets.canvas.interface.AxisLabel"]], "CanvasBase module": [[16, "module-lys.widgets.canvas.interface.CanvasBase"]], "Contour module": [[17, "module-lys.widgets.canvas.interface.Contour"]], "CrossAnnotation module": [[18, "module-lys.widgets.canvas.interface.CrossAnnotation"]], "Data module": [[19, "module-lys.widgets.canvas.interface.Data"]], "Events module": [[20, "module-lys.widgets.canvas.interface.Events"]], "Image module": [[21, "module-lys.widgets.canvas.interface.Image"]], "Legend module": [[22, "module-lys.widgets.canvas.interface.Legend"]], "Line module": [[23, "module-lys.widgets.canvas.interface.Line"]], "LineAnnotation module": [[24, "module-lys.widgets.canvas.interface.LineAnnotation"]], "RGB module": [[25, "module-lys.widgets.canvas.interface.RGB"]], "RectAnnotation module": [[26, "module-lys.widgets.canvas.interface.RectAnnotation"]], "RegionAnnotation module": [[27, "module-lys.widgets.canvas.interface.RegionAnnotation"]], "TextAnnotation module": [[28, "module-lys.widgets.canvas.interface.TextAnnotation"]], "Vector module": [[29, "module-lys.widgets.canvas.interface.Vector"]], "WaveData module": [[30, "module-lys.widgets.canvas.interface.WaveData"]], "multicut module": [[31, "multicut-module"]], "GUI modules": [[31, "module-lys.mcut.MultiCutGUI"]], "CUI modules": [[31, "cui-modules"]], "widgets module": [[32, "module-lys.widgets"]], "Special widgets": [[32, "special-widgets"]], "General widgets": [[32, "module-lys.widgets.general"]], "FileView": [[33, "module-lys.widgets.fileView"]], "LysSubWindow": [[34, "module-lys.widgets.mdi"]], "lysTable": [[35, "module-lys.widgets.table.lysTable"]], "Customizing GUIs": [[36, "customizing-guis"]], "Add new window": [[36, "add-new-window"]], "Add menu": [[36, "add-menu"]], "Add new tab in sidebar": [[36, "add-new-tab-in-sidebar"]], "Advanced usage of MultiCut": [[37, "advanced-usage-of-multicut"]], "Parallel computing": [[37, "parallel-computing"]], "Import/Export filters": [[37, "import-export-filters"]], "Reproduce your analysis": [[37, "reproduce-your-analysis"]], "Creating animation": [[37, "creating-animation"]], "Display cells3d data in scikit-image": [[38, "display-cells3d-data-in-scikit-image"]], "Use lys as Python interpreter": [[39, "use-lys-as-python-interpreter"]], "Use Python interpreter": [[39, "use-python-interpreter"]], "Define new function": [[39, "define-new-function"]], "Fitting": [[40, "fitting"]], "Fitting 1D data": [[40, "fitting-1d-data"]], "Limit fitting region": [[40, "limit-fitting-region"]], "Parameters plot": [[40, "parameters-plot"]], "Add new function": [[40, "add-new-function"]], "Introduction": [[41, "introduction"]], "Copy graphs from lys to vector graphics software": [[42, "copy-graphs-from-lys-to-vector-graphics-software"]], "Usage": [[42, "usage"]], "Interactive GUI analysis system MultiCut": [[43, "interactive-gui-analysis-system-multicut"]], "Use default template": [[43, "use-default-template"]], "Manually setup MultiCut": [[43, "manually-setup-multicut"]], "Cut along free line": [[43, "cut-along-free-line"]], "Apply filter": [[43, "apply-filter"]], "Postprocessing": [[43, "postprocessing"]], "Make your own template": [[43, "make-your-own-template"]], "Create publication-quality figure": [[43, "create-publication-quality-figure"]], "Adding your original filter": [[44, "adding-your-original-filter"]], "Add a very simple filter": [[44, "add-a-very-simple-filter"]], "Implement filter GUI": [[44, "implement-filter-gui"]], "Parallel computation by dask": [[44, "parallel-computation-by-dask"]], "Loading your file": [[45, "loading-your-file"]], "Loading csv file": [[45, "loading-csv-file"]], "Loading data by dask": [[45, "loading-data-by-dask"]], "Understanding shell in lys": [[46, "understanding-shell-in-lys"]], "Before testing": [[47, "before-testing"]], "Tutorial": [[48, "tutorial"]], "Basic: Required for all users": [[48, "basic-required-for-all-users"]], "Advanced: Read if it is needed": [[48, "advanced-read-if-it-is-needed"]], "Tips:": [[48, "tips"]], "Examples gallery:": [[48, "examples-gallery"]], "Displaying various data types": [[49, "displaying-various-data-types"]], "Line": [[49, "line"]], "Image": [[49, "image"]], "RGB image": [[49, "rgb-image"]], "Vector field": [[49, "vector-field"]], "Complex image": [[49, "complex-image"]], "Contour": [[49, "contour"]], "Display graphs in lys": [[50, "display-graphs-in-lys"]], "Plotting an 1D data": [[50, "plotting-an-1d-data"]], "Make publication-quality graph by matplotlib": [[50, "make-publication-quality-graph-by-matplotlib"]], "Save and export": [[50, "save-and-export"]]}, "indexentries": {"lyscanvas (class in lys.widgets.canvas.graphwindow)": [[4, "lys.widgets.canvas.GraphWindow.lysCanvas"]], "daskwave (class in lys.core)": [[5, "lys.core.DaskWave"]], "settingdict (class in lys.core)": [[5, "lys.core.SettingDict"]], "supportedformats() (lys.core.wave static method)": [[5, "lys.core.Wave.SupportedFormats"]], "wave (class in lys.core)": [[5, "lys.core.Wave"]], "waveaxes (class in lys.core)": [[5, "lys.core.WaveAxes"]], "wavenote (class in lys.core)": [[5, "lys.core.WaveNote"]], "axes (lys.core.daskwave attribute)": [[5, "lys.core.DaskWave.axes"]], "axes (lys.core.wave attribute)": [[5, "lys.core.Wave.axes"]], "compute() (lys.core.daskwave method)": [[5, "lys.core.DaskWave.compute"]], "data (lys.core.daskwave attribute)": [[5, "lys.core.DaskWave.data"]], "data (lys.core.wave attribute)": [[5, "lys.core.Wave.data"]], "duplicate() (lys.core.daskwave method)": [[5, "lys.core.DaskWave.duplicate"]], "duplicate() (lys.core.wave method)": [[5, "lys.core.Wave.duplicate"]], "export() (lys.core.wave method)": [[5, "lys.core.Wave.export"]], "getaxis() (lys.core.waveaxes method)": [[5, "lys.core.WaveAxes.getAxis"]], "importfrom() (lys.core.wave static method)": [[5, "lys.core.Wave.importFrom"]], "initworkers() (lys.core.daskwave class method)": [[5, "lys.core.DaskWave.initWorkers"]], "lys.core": [[5, "module-lys.core"]], "modified (lys.core.wave attribute)": [[5, "lys.core.Wave.modified"]], "module": [[5, "module-lys.core"], [6, "module-lys.filters.filtersGUI"], [6, "module-lys.filters.function"], [6, "module-lys.filters.interface"], [7, "module-lys.filters.filter.Convolution"], [7, "module-lys.filters.filter.Dask"], [7, "module-lys.filters.filter.Differentiate"], [7, "module-lys.filters.filter.FreeLine"], [7, "module-lys.filters.filter.Frequency"], [7, "module-lys.filters.filter.Integral"], [7, "module-lys.filters.filter.Interporation"], [7, "module-lys.filters.filter.MatrixMath"], [7, "module-lys.filters.filter.Region"], [7, "module-lys.filters.filter.Resize"], [7, "module-lys.filters.filter.Segmentation"], [7, "module-lys.filters.filter.Shift"], [7, "module-lys.filters.filter.SimpleMath"], [7, "module-lys.filters.filter.Smooth"], [7, "module-lys.filters.filter.Transform"], [8, "module-lys.fitting"], [8, "module-lys.fitting.Functions"], [9, "module-lys.functions"], [10, "module-lys.glb.MainWindow"], [10, "module-lys.glb.shell"], [11, "module-lys.widgets.canvas.interface.Annotation"], [12, "module-lys.widgets.canvas.interface.AnnotationData"], [13, "module-lys.widgets.canvas.interface.Area"], [14, "module-lys.widgets.canvas.interface.Axes"], [15, "module-lys.widgets.canvas.interface.AxisLabel"], [16, "module-lys.widgets.canvas.interface.CanvasBase"], [17, "module-lys.widgets.canvas.interface.Contour"], [18, "module-lys.widgets.canvas.interface.CrossAnnotation"], [19, "module-lys.widgets.canvas.interface.Data"], [20, "module-lys.widgets.canvas.interface.Events"], [21, "module-lys.widgets.canvas.interface.Image"], [22, "module-lys.widgets.canvas.interface.Legend"], [23, "module-lys.widgets.canvas.interface.Line"], [24, "module-lys.widgets.canvas.interface.LineAnnotation"], [25, "module-lys.widgets.canvas.interface.RGB"], [26, "module-lys.widgets.canvas.interface.RectAnnotation"], [27, "module-lys.widgets.canvas.interface.RegionAnnotation"], [28, "module-lys.widgets.canvas.interface.TextAnnotation"], [29, "module-lys.widgets.canvas.interface.Vector"], [30, "module-lys.widgets.canvas.interface.WaveData"], [31, "module-lys.mcut.CanvasManager"], [31, "module-lys.mcut.MultiCutGUI"], [32, "module-lys.widgets"], [32, "module-lys.widgets.general"], [33, "module-lys.widgets.fileView"], [34, "module-lys.widgets.mdi"], [35, "module-lys.widgets.table.Data"], [35, "module-lys.widgets.table.lysTable"]], "name (lys.core.wavenote property)": [[5, "lys.core.WaveNote.name"]], "note (lys.core.daskwave attribute)": [[5, "lys.core.DaskWave.note"]], "note (lys.core.wave attribute)": [[5, "lys.core.Wave.note"]], "persist() (lys.core.daskwave method)": [[5, "lys.core.DaskWave.persist"]], "pointtopos() (lys.core.waveaxes method)": [[5, "lys.core.WaveAxes.pointToPos"]], "postopoint() (lys.core.waveaxes method)": [[5, "lys.core.WaveAxes.posToPoint"]], "update() (lys.core.wave method)": [[5, "lys.core.Wave.update"]], "x (lys.core.waveaxes property)": [[5, "lys.core.WaveAxes.x"]], "y (lys.core.waveaxes property)": [[5, "lys.core.WaveAxes.y"]], "z (lys.core.waveaxes property)": [[5, "lys.core.WaveAxes.z"]], "filterinterface (class in lys.filters.interface)": [[6, "lys.filters.interface.FilterInterface"]], "filtersettingbase (class in lys.filters.interface)": [[6, "lys.filters.interface.FilterSettingBase"]], "filters (class in lys.filters.interface)": [[6, "lys.filters.interface.Filters"]], "filtersgui (class in lys.filters.filtersgui)": [[6, "lys.filters.filtersGUI.FiltersGUI"]], "getfilter() (lys.filters.interface.filtersettingbase method)": [[6, "lys.filters.interface.FilterSettingBase.GetFilter"]], "addfilter() (in module lys.filters.function)": [[6, "lys.filters.function.addFilter"]], "append() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.append"]], "clear() (lys.filters.filtersgui.filtersgui method)": [[6, "lys.filters.filtersGUI.FiltersGUI.clear"]], "dimensionchanged (lys.filters.interface.filtersettingbase attribute)": [[6, "lys.filters.interface.FilterSettingBase.dimensionChanged"]], "execute() (lys.filters.interface.filterinterface method)": [[6, "lys.filters.interface.FilterInterface.execute"]], "filtergui() (in module lys.filters.interface)": [[6, "lys.filters.interface.filterGUI"]], "fromfile() (in module lys.filters.function)": [[6, "lys.filters.function.fromFile"]], "fromfile() (lys.filters.interface.filters static method)": [[6, "lys.filters.interface.Filters.fromFile"]], "fromstring() (in module lys.filters.function)": [[6, "lys.filters.function.fromString"]], "fromstring() (lys.filters.interface.filters static method)": [[6, "lys.filters.interface.Filters.fromString"]], "fromwave() (in module lys.filters.function)": [[6, "lys.filters.function.fromWave"]], "fromwave() (lys.filters.interface.filters static method)": [[6, "lys.filters.interface.Filters.fromWave"]], "getdimension() (lys.filters.interface.filtersettingbase method)": [[6, "lys.filters.interface.FilterSettingBase.getDimension"]], "getfilter() (in module lys.filters.function)": [[6, "lys.filters.function.getFilter"]], "getfilterclass() (lys.filters.interface.filtersettingbase class method)": [[6, "lys.filters.interface.FilterSettingBase.getFilterClass"]], "getfilters() (lys.filters.filtersgui.filtersgui method)": [[6, "lys.filters.filtersGUI.FiltersGUI.getFilters"]], "getfilters() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.getFilters"]], "getparameters() (lys.filters.interface.filterinterface method)": [[6, "lys.filters.interface.FilterInterface.getParameters"]], "getparameters() (lys.filters.interface.filtersettingbase method)": [[6, "lys.filters.interface.FilterSettingBase.getParameters"]], "getparameters() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.getParameters"]], "getrelativedimension() (lys.filters.interface.filterinterface method)": [[6, "lys.filters.interface.FilterInterface.getRelativeDimension"]], "getrelativedimension() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.getRelativeDimension"]], "insert() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.insert"]], "isempty() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.isEmpty"]], "lys.filters.filtersgui": [[6, "module-lys.filters.filtersGUI"]], "lys.filters.function": [[6, "module-lys.filters.function"]], "lys.filters.interface": [[6, "module-lys.filters.interface"]], "saveasfile() (lys.filters.interface.filterinterface method)": [[6, "lys.filters.interface.FilterInterface.saveAsFile"]], "saveasfile() (lys.filters.interface.filters method)": [[6, "lys.filters.interface.Filters.saveAsFile"]], "setdimension() (lys.filters.filtersgui.filtersgui method)": [[6, "lys.filters.filtersGUI.FiltersGUI.setDimension"]], "setfilters() (lys.filters.filtersgui.filtersgui method)": [[6, "lys.filters.filtersGUI.FiltersGUI.setFilters"]], "setparameters() (lys.filters.interface.filtersettingbase method)": [[6, "lys.filters.interface.FilterSettingBase.setParameters"]], "tofile() (in module lys.filters.function)": [[6, "lys.filters.function.toFile"]], "tostring() (in module lys.filters.function)": [[6, "lys.filters.function.toString"]], "tostring() (lys.filters.interface.filters static method)": [[6, "lys.filters.interface.Filters.toString"]], "adaptivethresholdfilter (class in lys.filters.filter.segmentation)": [[7, "lys.filters.filter.Segmentation.AdaptiveThresholdFilter"]], "averagefilter (class in lys.filters.filter.smooth)": [[7, "lys.filters.filter.Smooth.AverageFilter"]], "axisshiftfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.AxisShiftFilter"]], "bandpassfilter (class in lys.filters.filter.frequency)": [[7, "lys.filters.filter.Frequency.BandPassFilter"]], "bandstopfilter (class in lys.filters.filter.frequency)": [[7, "lys.filters.filter.Frequency.BandStopFilter"]], "complexfilter (class in lys.filters.filter.simplemath)": [[7, "lys.filters.filter.SimpleMath.ComplexFilter"]], "fourierfilter (class in lys.filters.filter.frequency)": [[7, "lys.filters.filter.Frequency.FourierFilter"]], "freelinefilter (class in lys.filters.filter.freeline)": [[7, "lys.filters.filter.FreeLine.FreeLineFilter"]], "gaussianfilter (class in lys.filters.filter.smooth)": [[7, "lys.filters.filter.Smooth.GaussianFilter"]], "gradientfilter (class in lys.filters.filter.differentiate)": [[7, "lys.filters.filter.Differentiate.GradientFilter"]], "highpassfilter (class in lys.filters.filter.frequency)": [[7, "lys.filters.filter.Frequency.HighPassFilter"]], "indexmathfilter (class in lys.filters.filter.matrixmath)": [[7, "lys.filters.filter.MatrixMath.IndexMathFilter"]], "integralallfilter (class in lys.filters.filter.integral)": [[7, "lys.filters.filter.Integral.IntegralAllFilter"]], "integralcirclefilter (class in lys.filters.filter.integral)": [[7, "lys.filters.filter.Integral.IntegralCircleFilter"]], "integralfilter (class in lys.filters.filter.integral)": [[7, "lys.filters.filter.Integral.IntegralFilter"]], "interpfilter (class in lys.filters.filter.interporation)": [[7, "lys.filters.filter.Interporation.InterpFilter"]], "laplacianconvfilter (class in lys.filters.filter.convolution)": [[7, "lys.filters.filter.Convolution.LaplacianConvFilter"]], "laplacianfilter (class in lys.filters.filter.differentiate)": [[7, "lys.filters.filter.Differentiate.LaplacianFilter"]], "lowpassfilter (class in lys.filters.filter.frequency)": [[7, "lys.filters.filter.Frequency.LowPassFilter"]], "magnificationfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.MagnificationFilter"]], "medianfilter (class in lys.filters.filter.smooth)": [[7, "lys.filters.filter.Smooth.MedianFilter"]], "mirrorfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.MirrorFilter"]], "nablafilter (class in lys.filters.filter.differentiate)": [[7, "lys.filters.filter.Differentiate.NablaFilter"]], "nantonumfilter (class in lys.filters.filter.simplemath)": [[7, "lys.filters.filter.SimpleMath.NanToNumFilter"]], "normalizefilter (class in lys.filters.filter.region)": [[7, "lys.filters.filter.Region.NormalizeFilter"]], "offsetfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.OffsetFilter"]], "paddingfilter (class in lys.filters.filter.resize)": [[7, "lys.filters.filter.Resize.PaddingFilter"]], "phasefilter (class in lys.filters.filter.simplemath)": [[7, "lys.filters.filter.SimpleMath.PhaseFilter"]], "prewittfilter (class in lys.filters.filter.convolution)": [[7, "lys.filters.filter.Convolution.PrewittFilter"]], "rechunkfilter (class in lys.filters.filter.dask)": [[7, "lys.filters.filter.Dask.RechunkFilter"]], "reducesizefilter (class in lys.filters.filter.resize)": [[7, "lys.filters.filter.Resize.ReduceSizeFilter"]], "referencenormalizefilter (class in lys.filters.filter.region)": [[7, "lys.filters.filter.Region.ReferenceNormalizeFilter"]], "reflectfilter (class in lys.filters.filter.shift)": [[7, "lys.filters.filter.Shift.ReflectFilter"]], "removeimpulsivenoise (class in lys.filters.filter.smooth)": [[7, "lys.filters.filter.Smooth.RemoveImpulsiveNoise"]], "reversefilter (class in lys.filters.filter.shift)": [[7, "lys.filters.filter.Shift.ReverseFilter"]], "rollfilter (class in lys.filters.filter.shift)": [[7, "lys.filters.filter.Shift.RollFilter"]], "rotation2dfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.Rotation2DFilter"]], "selectindexfilter (class in lys.filters.filter.matrixmath)": [[7, "lys.filters.filter.MatrixMath.SelectIndexFilter"]], "selectregionfilter (class in lys.filters.filter.region)": [[7, "lys.filters.filter.Region.SelectRegionFilter"]], "setaxisfilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.SetAxisFilter"]], "shiftfilter (class in lys.filters.filter.shift)": [[7, "lys.filters.filter.Shift.ShiftFilter"]], "simplemathfilter (class in lys.filters.filter.simplemath)": [[7, "lys.filters.filter.SimpleMath.SimpleMathFilter"]], "slicefilter (class in lys.filters.filter.matrixmath)": [[7, "lys.filters.filter.MatrixMath.SliceFilter"]], "sobelfilter (class in lys.filters.filter.convolution)": [[7, "lys.filters.filter.Convolution.SobelFilter"]], "symmetrizefilter (class in lys.filters.filter.transform)": [[7, "lys.filters.filter.Transform.SymmetrizeFilter"]], "thresholdfilter (class in lys.filters.filter.segmentation)": [[7, "lys.filters.filter.Segmentation.ThresholdFilter"]], "transposefilter (class in lys.filters.filter.matrixmath)": [[7, "lys.filters.filter.MatrixMath.TransposeFilter"]], "getparameters() (lys.filters.filter.dask.rechunkfilter method)": [[7, "lys.filters.filter.Dask.RechunkFilter.getParameters"]], "getparameters() (lys.filters.filter.differentiate.gradientfilter method)": [[7, "lys.filters.filter.Differentiate.GradientFilter.getParameters"]], "getparameters() (lys.filters.filter.differentiate.laplacianfilter method)": [[7, "lys.filters.filter.Differentiate.LaplacianFilter.getParameters"]], "getparameters() (lys.filters.filter.differentiate.nablafilter method)": [[7, "lys.filters.filter.Differentiate.NablaFilter.getParameters"]], "getparameters() (lys.filters.filter.freeline.freelinefilter method)": [[7, "lys.filters.filter.FreeLine.FreeLineFilter.getParameters"]], "getparameters() (lys.filters.filter.frequency.bandpassfilter method)": [[7, "lys.filters.filter.Frequency.BandPassFilter.getParameters"]], "getparameters() (lys.filters.filter.frequency.bandstopfilter method)": [[7, "lys.filters.filter.Frequency.BandStopFilter.getParameters"]], "getparameters() (lys.filters.filter.frequency.fourierfilter method)": [[7, "lys.filters.filter.Frequency.FourierFilter.getParameters"]], "getparameters() (lys.filters.filter.frequency.highpassfilter method)": [[7, "lys.filters.filter.Frequency.HighPassFilter.getParameters"]], "getparameters() (lys.filters.filter.frequency.lowpassfilter method)": [[7, "lys.filters.filter.Frequency.LowPassFilter.getParameters"]], "getparameters() (lys.filters.filter.integral.integralallfilter method)": [[7, "lys.filters.filter.Integral.IntegralAllFilter.getParameters"]], "getparameters() (lys.filters.filter.integral.integralcirclefilter method)": [[7, "lys.filters.filter.Integral.IntegralCircleFilter.getParameters"]], "getparameters() (lys.filters.filter.integral.integralfilter method)": [[7, "lys.filters.filter.Integral.IntegralFilter.getParameters"]], "getparameters() (lys.filters.filter.interporation.interpfilter method)": [[7, "lys.filters.filter.Interporation.InterpFilter.getParameters"]], "getparameters() (lys.filters.filter.matrixmath.indexmathfilter method)": [[7, "lys.filters.filter.MatrixMath.IndexMathFilter.getParameters"]], "getparameters() (lys.filters.filter.matrixmath.selectindexfilter method)": [[7, "lys.filters.filter.MatrixMath.SelectIndexFilter.getParameters"]], "getparameters() (lys.filters.filter.matrixmath.slicefilter method)": [[7, "lys.filters.filter.MatrixMath.SliceFilter.getParameters"]], "getparameters() (lys.filters.filter.matrixmath.transposefilter method)": [[7, "lys.filters.filter.MatrixMath.TransposeFilter.getParameters"]], "getparameters() (lys.filters.filter.region.normalizefilter method)": [[7, "lys.filters.filter.Region.NormalizeFilter.getParameters"]], "getparameters() (lys.filters.filter.region.referencenormalizefilter method)": [[7, "lys.filters.filter.Region.ReferenceNormalizeFilter.getParameters"]], "getparameters() (lys.filters.filter.region.selectregionfilter method)": [[7, "lys.filters.filter.Region.SelectRegionFilter.getParameters"]], "getparameters() (lys.filters.filter.resize.paddingfilter method)": [[7, "lys.filters.filter.Resize.PaddingFilter.getParameters"]], "getparameters() (lys.filters.filter.resize.reducesizefilter method)": [[7, "lys.filters.filter.Resize.ReduceSizeFilter.getParameters"]], "getparameters() (lys.filters.filter.segmentation.adaptivethresholdfilter method)": [[7, "lys.filters.filter.Segmentation.AdaptiveThresholdFilter.getParameters"]], "getparameters() (lys.filters.filter.segmentation.thresholdfilter method)": [[7, "lys.filters.filter.Segmentation.ThresholdFilter.getParameters"]], "getparameters() (lys.filters.filter.shift.reflectfilter method)": [[7, "lys.filters.filter.Shift.ReflectFilter.getParameters"]], "getparameters() (lys.filters.filter.shift.reversefilter method)": [[7, "lys.filters.filter.Shift.ReverseFilter.getParameters"]], "getparameters() (lys.filters.filter.shift.rollfilter method)": [[7, "lys.filters.filter.Shift.RollFilter.getParameters"]], "getparameters() (lys.filters.filter.shift.shiftfilter method)": [[7, "lys.filters.filter.Shift.ShiftFilter.getParameters"]], "getparameters() (lys.filters.filter.simplemath.complexfilter method)": [[7, "lys.filters.filter.SimpleMath.ComplexFilter.getParameters"]], "getparameters() (lys.filters.filter.simplemath.nantonumfilter method)": [[7, "lys.filters.filter.SimpleMath.NanToNumFilter.getParameters"]], "getparameters() (lys.filters.filter.simplemath.phasefilter method)": [[7, "lys.filters.filter.SimpleMath.PhaseFilter.getParameters"]], "getparameters() (lys.filters.filter.simplemath.simplemathfilter method)": [[7, "lys.filters.filter.SimpleMath.SimpleMathFilter.getParameters"]], "getparameters() (lys.filters.filter.smooth.averagefilter method)": [[7, "lys.filters.filter.Smooth.AverageFilter.getParameters"]], "getparameters() (lys.filters.filter.smooth.gaussianfilter method)": [[7, "lys.filters.filter.Smooth.GaussianFilter.getParameters"]], "getparameters() (lys.filters.filter.smooth.medianfilter method)": [[7, "lys.filters.filter.Smooth.MedianFilter.getParameters"]], "getparameters() (lys.filters.filter.smooth.removeimpulsivenoise method)": [[7, "lys.filters.filter.Smooth.RemoveImpulsiveNoise.getParameters"]], "getparameters() (lys.filters.filter.transform.axisshiftfilter method)": [[7, "lys.filters.filter.Transform.AxisShiftFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.magnificationfilter method)": [[7, "lys.filters.filter.Transform.MagnificationFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.mirrorfilter method)": [[7, "lys.filters.filter.Transform.MirrorFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.offsetfilter method)": [[7, "lys.filters.filter.Transform.OffsetFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.rotation2dfilter method)": [[7, "lys.filters.filter.Transform.Rotation2DFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.setaxisfilter method)": [[7, "lys.filters.filter.Transform.SetAxisFilter.getParameters"]], "getparameters() (lys.filters.filter.transform.symmetrizefilter method)": [[7, "lys.filters.filter.Transform.SymmetrizeFilter.getParameters"]], "getrelativedimension() (lys.filters.filter.differentiate.nablafilter method)": [[7, "lys.filters.filter.Differentiate.NablaFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.freeline.freelinefilter method)": [[7, "lys.filters.filter.FreeLine.FreeLineFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.integral.integralallfilter method)": [[7, "lys.filters.filter.Integral.IntegralAllFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.integral.integralcirclefilter method)": [[7, "lys.filters.filter.Integral.IntegralCircleFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.integral.integralfilter method)": [[7, "lys.filters.filter.Integral.IntegralFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.matrixmath.indexmathfilter method)": [[7, "lys.filters.filter.MatrixMath.IndexMathFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.matrixmath.selectindexfilter method)": [[7, "lys.filters.filter.MatrixMath.SelectIndexFilter.getRelativeDimension"]], "getrelativedimension() (lys.filters.filter.matrixmath.slicefilter method)": [[7, "lys.filters.filter.MatrixMath.SliceFilter.getRelativeDimension"]], "lys.filters.filter.convolution": [[7, "module-lys.filters.filter.Convolution"]], "lys.filters.filter.dask": [[7, "module-lys.filters.filter.Dask"]], "lys.filters.filter.differentiate": [[7, "module-lys.filters.filter.Differentiate"]], "lys.filters.filter.freeline": [[7, "module-lys.filters.filter.FreeLine"]], "lys.filters.filter.frequency": [[7, "module-lys.filters.filter.Frequency"]], "lys.filters.filter.integral": [[7, "module-lys.filters.filter.Integral"]], "lys.filters.filter.interporation": [[7, "module-lys.filters.filter.Interporation"]], "lys.filters.filter.matrixmath": [[7, "module-lys.filters.filter.MatrixMath"]], "lys.filters.filter.region": [[7, "module-lys.filters.filter.Region"]], "lys.filters.filter.resize": [[7, "module-lys.filters.filter.Resize"]], "lys.filters.filter.segmentation": [[7, "module-lys.filters.filter.Segmentation"]], "lys.filters.filter.shift": [[7, "module-lys.filters.filter.Shift"]], "lys.filters.filter.simplemath": [[7, "module-lys.filters.filter.SimpleMath"]], "lys.filters.filter.smooth": [[7, "module-lys.filters.filter.Smooth"]], "lys.filters.filter.transform": [[7, "module-lys.filters.filter.Transform"]], "addfittingfunction() (in module lys.fitting)": [[8, "lys.fitting.addFittingFunction"]], "const() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.const"]], "cos() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.cos"]], "doubleexp() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.doubleExp"]], "error() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.error"]], "exp() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.exp"]], "gauss() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.gauss"]], "linear() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.linear"]], "lorentz() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.lorentz"]], "lys.fitting": [[8, "module-lys.fitting"]], "lys.fitting.functions": [[8, "module-lys.fitting.Functions"]], "quadratic() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.quadratic"]], "relaxosci() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.relaxOsci"]], "step() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.step"]], "stepexp() (in module lys.fitting.functions)": [[8, "lys.fitting.Functions.stepExp"]], "append() (in module lys.functions)": [[9, "lys.functions.append"]], "display() (in module lys.functions)": [[9, "lys.functions.display"]], "edit() (in module lys.functions)": [[9, "lys.functions.edit"]], "frontcanvas() (in module lys.functions)": [[9, "lys.functions.frontCanvas"]], "home() (in module lys.functions)": [[9, "lys.functions.home"]], "load() (in module lys.functions)": [[9, "lys.functions.load"]], "loadablefiles() (in module lys.functions)": [[9, "lys.functions.loadableFiles"]], "lys.functions": [[9, "module-lys.functions"]], "lyspath() (in module lys.functions)": [[9, "lys.functions.lysPath"]], "multicut() (in module lys.functions)": [[9, "lys.functions.multicut"]], "registerfileloader() (in module lys.functions)": [[9, "lys.functions.registerFileLoader"]], "registerfittingfunction() (in module lys.functions)": [[9, "lys.functions.registerFittingFunction"]], "extendshell (class in lys.glb.shell)": [[10, "lys.glb.shell.ExtendShell"]], "mainwindow (class in lys.glb.mainwindow)": [[10, "lys.glb.MainWindow.MainWindow"]], "addobject() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.addObject"]], "beforeclosed (lys.glb.mainwindow.mainwindow attribute)": [[10, "lys.glb.MainWindow.MainWindow.beforeClosed"]], "closeallgraphs() (lys.glb.mainwindow.mainwindow method)": [[10, "lys.glb.MainWindow.MainWindow.closeAllGraphs"]], "closeevent() (lys.glb.mainwindow.mainwindow method)": [[10, "lys.glb.MainWindow.MainWindow.closeEvent"]], "closed (lys.glb.mainwindow.mainwindow attribute)": [[10, "lys.glb.MainWindow.MainWindow.closed"]], "commandexecuted (lys.glb.shell.extendshell attribute)": [[10, "lys.glb.shell.ExtendShell.commandExecuted"]], "commandlog (lys.glb.shell.extendshell property)": [[10, "lys.glb.shell.ExtendShell.commandLog"]], "dict (lys.glb.shell.extendshell property)": [[10, "lys.glb.shell.ExtendShell.dict"]], "eval() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.eval"]], "exec() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.exec"]], "fileview (lys.glb.mainwindow.mainwindow property)": [[10, "lys.glb.MainWindow.MainWindow.fileView"]], "importall() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.importAll"]], "importmodule() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.importModule"]], "lys.glb.mainwindow": [[10, "module-lys.glb.MainWindow"]], "lys.glb.shell": [[10, "module-lys.glb.shell"]], "refresh() (lys.glb.shell.extendshell method)": [[10, "lys.glb.shell.ExtendShell.refresh"]], "tabwidget() (lys.glb.mainwindow.mainwindow method)": [[10, "lys.glb.MainWindow.MainWindow.tabWidget"]], "canvasannotation (class in lys.widgets.canvas.interface.annotation)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation"]], "addcrossannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addCrossAnnotation"]], "addfreeregionannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addFreeRegionAnnotation"]], "addinfinitelineannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addInfiniteLineAnnotation"]], "addlineannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addLineAnnotation"]], "addrectannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addRectAnnotation"]], "addregionannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addRegionAnnotation"]], "addtext() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.addText"]], "annotationchanged (lys.widgets.canvas.interface.annotation.canvasannotation attribute)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.annotationChanged"]], "getannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getAnnotations"]], "getcrossannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getCrossAnnotations"]], "getfreeregionannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getFreeRegionAnnotations"]], "getinfinitelineannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getInfiniteLineAnnotations"]], "getlineannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getLineAnnotations"]], "getrectannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getRectAnnotations"]], "getregionannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getRegionAnnotations"]], "gettextannotations() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.getTextAnnotations"]], "lys.widgets.canvas.interface.annotation": [[11, "module-lys.widgets.canvas.interface.Annotation"]], "removeannotation() (lys.widgets.canvas.interface.annotation.canvasannotation method)": [[11, "lys.widgets.canvas.interface.Annotation.CanvasAnnotation.removeAnnotation"]], "annotationdata (class in lys.widgets.canvas.interface.annotationdata)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData"]], "annotationwithline (class in lys.widgets.canvas.interface.annotationdata)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine"]], "getaxis() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.getAxis"]], "getlinecolor() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.getLineColor"]], "getlinestyle() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.getLineStyle"]], "getlinewidth() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.getLineWidth"]], "getname() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.getName"]], "getvisible() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.getVisible"]], "getzorder() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.getZOrder"]], "loadappearance() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.loadAppearance"]], "lys.widgets.canvas.interface.annotationdata": [[12, "module-lys.widgets.canvas.interface.AnnotationData"]], "saveappearance() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.saveAppearance"]], "setlinecolor() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.setLineColor"]], "setlinestyle() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.setLineStyle"]], "setlinewidth() (lys.widgets.canvas.interface.annotationdata.annotationwithline method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationWithLine.setLineWidth"]], "setname() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.setName"]], "setvisible() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.setVisible"]], "setzorder() (lys.widgets.canvas.interface.annotationdata.annotationdata method)": [[12, "lys.widgets.canvas.interface.AnnotationData.AnnotationData.setZOrder"]], "canvasmargin (class in lys.widgets.canvas.interface.area)": [[13, "lys.widgets.canvas.interface.Area.CanvasMargin"]], "canvassize (class in lys.widgets.canvas.interface.area)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize"]], "canvasresized (lys.widgets.canvas.interface.area.canvassize attribute)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.canvasResized"]], "getcanvassize() (lys.widgets.canvas.interface.area.canvassize method)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.getCanvasSize"]], "getmargin() (lys.widgets.canvas.interface.area.canvasmargin method)": [[13, "lys.widgets.canvas.interface.Area.CanvasMargin.getMargin"]], "getsizeparams() (lys.widgets.canvas.interface.area.canvassize method)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.getSizeParams"]], "lys.widgets.canvas.interface.area": [[13, "module-lys.widgets.canvas.interface.Area"]], "marginchanged (lys.widgets.canvas.interface.area.canvasmargin attribute)": [[13, "lys.widgets.canvas.interface.Area.CanvasMargin.marginChanged"]], "parentresized() (lys.widgets.canvas.interface.area.canvassize method)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.parentResized"]], "refreshcanvassize() (lys.widgets.canvas.interface.area.canvassize method)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.refreshCanvasSize"]], "refreshmargin() (lys.widgets.canvas.interface.area.canvasmargin method)": [[13, "lys.widgets.canvas.interface.Area.CanvasMargin.refreshMargin"]], "setcanvassize() (lys.widgets.canvas.interface.area.canvassize method)": [[13, "lys.widgets.canvas.interface.Area.CanvasSize.setCanvasSize"]], "setmargin() (lys.widgets.canvas.interface.area.canvasmargin method)": [[13, "lys.widgets.canvas.interface.Area.CanvasMargin.setMargin"]], "canvasaxes (class in lys.widgets.canvas.interface.axes)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes"]], "canvasticks (class in lys.widgets.canvas.interface.axes)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks"]], "addaxis() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.addAxis"]], "axischanged (lys.widgets.canvas.interface.axes.canvasaxes attribute)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.axisChanged"]], "axisisvalid() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.axisIsValid"]], "axislist() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.axisList"]], "axisrangechanged (lys.widgets.canvas.interface.axes.canvasaxes attribute)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.axisRangeChanged"]], "clearselectedrange() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.clearSelectedRange"]], "getaxiscolor() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.getAxisColor"]], "getaxismode() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.getAxisMode"]], "getaxisrange() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.getAxisRange"]], "getaxisthick() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.getAxisThick"]], "getmirroraxis() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.getMirrorAxis"]], "gettickdirection() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.getTickDirection"]], "gettickinterval() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.getTickInterval"]], "getticklength() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.getTickLength"]], "gettickvisible() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.getTickVisible"]], "gettickwidth() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.getTickWidth"]], "isautoscaled() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.isAutoScaled"]], "israngeselected() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.isRangeSelected"]], "lys.widgets.canvas.interface.axes": [[14, "module-lys.widgets.canvas.interface.Axes"]], "selectedrange() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.selectedRange"]], "selectedrangechanged (lys.widgets.canvas.interface.axes.canvasaxes attribute)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.selectedRangeChanged"]], "setautoscaleaxis() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setAutoScaleAxis"]], "setaxiscolor() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setAxisColor"]], "setaxismode() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setAxisMode"]], "setaxisrange() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setAxisRange"]], "setaxisthick() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setAxisThick"]], "setmirroraxis() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setMirrorAxis"]], "setselectedrange() (lys.widgets.canvas.interface.axes.canvasaxes method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasAxes.setSelectedRange"]], "settickdirection() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.setTickDirection"]], "settickinterval() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.setTickInterval"]], "setticklength() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.setTickLength"]], "settickvisible() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.setTickVisible"]], "settickwidth() (lys.widgets.canvas.interface.axes.canvasticks method)": [[14, "lys.widgets.canvas.interface.Axes.CanvasTicks.setTickWidth"]], "canvasaxislabel (class in lys.widgets.canvas.interface.axislabel)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel"]], "canvasticklabel (class in lys.widgets.canvas.interface.axislabel)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel"]], "getaxislabel() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.getAxisLabel"]], "getaxislabelcoords() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.getAxisLabelCoords"]], "getaxislabelfont() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.getAxisLabelFont"]], "getaxislabelvisible() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.getAxisLabelVisible"]], "getticklabelfont() (lys.widgets.canvas.interface.axislabel.canvasticklabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel.getTickLabelFont"]], "getticklabelvisible() (lys.widgets.canvas.interface.axislabel.canvasticklabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel.getTickLabelVisible"]], "lys.widgets.canvas.interface.axislabel": [[15, "module-lys.widgets.canvas.interface.AxisLabel"]], "setaxislabel() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.setAxisLabel"]], "setaxislabelcoords() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.setAxisLabelCoords"]], "setaxislabelfont() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.setAxisLabelFont"]], "setaxislabelvisible() (lys.widgets.canvas.interface.axislabel.canvasaxislabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasAxisLabel.setAxisLabelVisible"]], "setticklabelfont() (lys.widgets.canvas.interface.axislabel.canvasticklabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel.setTickLabelFont"]], "setticklabelvisible() (lys.widgets.canvas.interface.axislabel.canvasticklabel method)": [[15, "lys.widgets.canvas.interface.AxisLabel.CanvasTickLabel.setTickLabelVisible"]], "canvasbase (class in lys.widgets.canvas.interface.canvasbase)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase"]], "canvaspart (class in lys.widgets.canvas.interface.canvasbase)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasPart"]], "loadfromdictionary() (lys.widgets.canvas.interface.canvasbase.canvasbase method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.LoadFromDictionary"]], "saveasdictionary() (lys.widgets.canvas.interface.canvasbase.canvasbase method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.SaveAsDictionary"]], "addcanvaspart() (lys.widgets.canvas.interface.canvasbase.canvasbase method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.addCanvasPart"]], "canvas() (lys.widgets.canvas.interface.canvasbase.canvaspart method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasPart.canvas"]], "datatypes() (lys.widgets.canvas.interface.canvasbase.canvasbase static method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.dataTypes"]], "delayupdate() (lys.widgets.canvas.interface.canvasbase.canvasbase method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.delayUpdate"]], "disablesavecanvas() (in module lys.widgets.canvas.interface.canvasbase)": [[16, "lys.widgets.canvas.interface.CanvasBase.disableSaveCanvas"]], "finalize() (lys.widgets.canvas.interface.canvasbase.canvasbase method)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.finalize"]], "finalized (lys.widgets.canvas.interface.canvasbase.canvasbase attribute)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.finalized"]], "initcanvas (lys.widgets.canvas.interface.canvasbase.canvasbase attribute)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.initCanvas"]], "loadcanvas (lys.widgets.canvas.interface.canvasbase.canvasbase attribute)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.loadCanvas"]], "lys.widgets.canvas.interface.canvasbase": [[16, "module-lys.widgets.canvas.interface.CanvasBase"]], "savecanvas (lys.widgets.canvas.interface.canvasbase.canvasbase attribute)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.saveCanvas"]], "savecanvas() (in module lys.widgets.canvas.interface.canvasbase)": [[16, "lys.widgets.canvas.interface.CanvasBase.saveCanvas"]], "updated (lys.widgets.canvas.interface.canvasbase.canvasbase attribute)": [[16, "lys.widgets.canvas.interface.CanvasBase.CanvasBase.updated"]], "contourdata (class in lys.widgets.canvas.interface.contour)": [[17, "lys.widgets.canvas.interface.Contour.ContourData"]], "getcolor() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.getColor"]], "getlevel() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.getLevel"]], "getstyle() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.getStyle"]], "getwidth() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.getWidth"]], "lys.widgets.canvas.interface.contour": [[17, "module-lys.widgets.canvas.interface.Contour"]], "setcolor() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.setColor"]], "setlevel() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.setLevel"]], "setstyle() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.setStyle"]], "setwidth() (lys.widgets.canvas.interface.contour.contourdata method)": [[17, "lys.widgets.canvas.interface.Contour.ContourData.setWidth"]], "crossannotation (class in lys.widgets.canvas.interface.crossannotation)": [[18, "lys.widgets.canvas.interface.CrossAnnotation.CrossAnnotation"]], "getposition() (lys.widgets.canvas.interface.crossannotation.crossannotation method)": [[18, "lys.widgets.canvas.interface.CrossAnnotation.CrossAnnotation.getPosition"]], "lys.widgets.canvas.interface.crossannotation": [[18, "module-lys.widgets.canvas.interface.CrossAnnotation"]], "positionchanged (lys.widgets.canvas.interface.crossannotation.crossannotation attribute)": [[18, "lys.widgets.canvas.interface.CrossAnnotation.CrossAnnotation.positionChanged"]], "setposition() (lys.widgets.canvas.interface.crossannotation.crossannotation method)": [[18, "lys.widgets.canvas.interface.CrossAnnotation.CrossAnnotation.setPosition"]], "append() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.Append"]], "canvasdata (class in lys.widgets.canvas.interface.data)": [[19, "lys.widgets.canvas.interface.Data.CanvasData"]], "clear() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.Clear"]], "remove() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.Remove"]], "datachanged (lys.widgets.canvas.interface.data.canvasdata attribute)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.dataChanged"]], "getcontours() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getContours"]], "getimages() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getImages"]], "getlines() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getLines"]], "getrgbs() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getRGBs"]], "getvectorfields() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getVectorFields"]], "getwavedata() (lys.widgets.canvas.interface.data.canvasdata method)": [[19, "lys.widgets.canvas.interface.Data.CanvasData.getWaveData"]], "lys.widgets.canvas.interface.data": [[19, "module-lys.widgets.canvas.interface.Data"]], "canvasfocusevent (class in lys.widgets.canvas.interface.events)": [[20, "lys.widgets.canvas.interface.Events.CanvasFocusEvent"]], "canvaskeyboardevent (class in lys.widgets.canvas.interface.events)": [[20, "lys.widgets.canvas.interface.Events.CanvasKeyboardEvent"]], "canvasmouseevent (class in lys.widgets.canvas.interface.events)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent"]], "clicked (lys.widgets.canvas.interface.events.canvasmouseevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.clicked"]], "doubleclicked (lys.widgets.canvas.interface.events.canvasmouseevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.doubleClicked"]], "focused (lys.widgets.canvas.interface.events.canvasfocusevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasFocusEvent.focused"]], "getfrontcanvas() (in module lys.widgets.canvas.interface.events)": [[20, "lys.widgets.canvas.interface.Events.getFrontCanvas"]], "keypressed (lys.widgets.canvas.interface.events.canvaskeyboardevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasKeyboardEvent.keyPressed"]], "lys.widgets.canvas.interface.events": [[20, "module-lys.widgets.canvas.interface.Events"]], "mapposition() (lys.widgets.canvas.interface.events.canvasmouseevent method)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.mapPosition"]], "mousemoved (lys.widgets.canvas.interface.events.canvasmouseevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.mouseMoved"]], "mousepressed (lys.widgets.canvas.interface.events.canvasmouseevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.mousePressed"]], "mousereleased (lys.widgets.canvas.interface.events.canvasmouseevent attribute)": [[20, "lys.widgets.canvas.interface.Events.CanvasMouseEvent.mouseReleased"]], "imagedata (class in lys.widgets.canvas.interface.image)": [[21, "lys.widgets.canvas.interface.Image.ImageData"]], "getautocolorrange() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getAutoColorRange"]], "getcolorrange() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColorRange"]], "getcolorbardirection() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColorbarDirection"]], "getcolorbarposition() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColorbarPosition"]], "getcolorbarsize() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColorbarSize"]], "getcolorbarvisible() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColorbarVisible"]], "getcolormap() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getColormap"]], "getgamma() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getGamma"]], "getopacity() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.getOpacity"]], "islog() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.isLog"]], "lys.widgets.canvas.interface.image": [[21, "module-lys.widgets.canvas.interface.Image"]], "setcolorrange() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColorRange"]], "setcolorbardirection() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColorbarDirection"]], "setcolorbarposition() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColorbarPosition"]], "setcolorbarsize() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColorbarSize"]], "setcolorbarvisible() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColorbarVisible"]], "setcolormap() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setColormap"]], "setgamma() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setGamma"]], "setlog() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setLog"]], "setopacity() (lys.widgets.canvas.interface.image.imagedata method)": [[21, "lys.widgets.canvas.interface.Image.ImageData.setOpacity"]], "canvaslegend (class in lys.widgets.canvas.interface.legend)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend"]], "getlegendfont() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.getLegendFont"]], "getlegendframevisible() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.getLegendFrameVisible"]], "getlegendposition() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.getLegendPosition"]], "legendpositionchanged (lys.widgets.canvas.interface.legend.canvaslegend attribute)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.legendPositionChanged"]], "lys.widgets.canvas.interface.legend": [[22, "module-lys.widgets.canvas.interface.Legend"]], "setlegendfont() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.setLegendFont"]], "setlegendframevisible() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.setLegendFrameVisible"]], "setlegendposition() (lys.widgets.canvas.interface.legend.canvaslegend method)": [[22, "lys.widgets.canvas.interface.Legend.CanvasLegend.setLegendPosition"]], "linedata (class in lys.widgets.canvas.interface.line)": [[23, "lys.widgets.canvas.interface.Line.LineData"]], "getcapsize() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getCapSize"]], "getcolor() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getColor"]], "geterrorbar() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getErrorbar"]], "getlegendlabel() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getLegendLabel"]], "getlegendvisible() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getLegendVisible"]], "getmarker() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getMarker"]], "getmarkerfilling() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getMarkerFilling"]], "getmarkersize() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getMarkerSize"]], "getmarkerthick() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getMarkerThick"]], "getstyle() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getStyle"]], "getwidth() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.getWidth"]], "lys.widgets.canvas.interface.line": [[23, "module-lys.widgets.canvas.interface.Line"]], "setcapsize() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setCapSize"]], "setcolor() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setColor"]], "seterrorbar() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setErrorbar"]], "setlegendlabel() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setLegendLabel"]], "setlegendvisible() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setLegendVisible"]], "setmarker() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setMarker"]], "setmarkerfilling() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setMarkerFilling"]], "setmarkersize() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setMarkerSize"]], "setmarkerthick() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setMarkerThick"]], "setstyle() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setStyle"]], "setwidth() (lys.widgets.canvas.interface.line.linedata method)": [[23, "lys.widgets.canvas.interface.Line.LineData.setWidth"]], "infinitelineannotation (class in lys.widgets.canvas.interface.lineannotation)": [[24, "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation"]], "lineannotation (class in lys.widgets.canvas.interface.lineannotation)": [[24, "lys.widgets.canvas.interface.LineAnnotation.LineAnnotation"]], "getorientation() (lys.widgets.canvas.interface.lineannotation.infinitelineannotation method)": [[24, "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation.getOrientation"]], "getposition() (lys.widgets.canvas.interface.lineannotation.infinitelineannotation method)": [[24, "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation.getPosition"]], "getposition() (lys.widgets.canvas.interface.lineannotation.lineannotation method)": [[24, "lys.widgets.canvas.interface.LineAnnotation.LineAnnotation.getPosition"]], "lys.widgets.canvas.interface.lineannotation": [[24, "module-lys.widgets.canvas.interface.LineAnnotation"]], "positionchanged (lys.widgets.canvas.interface.lineannotation.infinitelineannotation attribute)": [[24, "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation.positionChanged"]], "positionchanged (lys.widgets.canvas.interface.lineannotation.lineannotation attribute)": [[24, "lys.widgets.canvas.interface.LineAnnotation.LineAnnotation.positionChanged"]], "setposition() (lys.widgets.canvas.interface.lineannotation.infinitelineannotation method)": [[24, "lys.widgets.canvas.interface.LineAnnotation.InfiniteLineAnnotation.setPosition"]], "setposition() (lys.widgets.canvas.interface.lineannotation.lineannotation method)": [[24, "lys.widgets.canvas.interface.LineAnnotation.LineAnnotation.setPosition"]], "rgbdata (class in lys.widgets.canvas.interface.rgb)": [[25, "lys.widgets.canvas.interface.RGB.RGBData"]], "getautocolorrange() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getAutoColorRange"]], "getcolorrange() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColorRange"]], "getcolorrotation() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColorRotation"]], "getcolormapdata() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColormapData"]], "getcolormapposition() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColormapPosition"]], "getcolormapsize() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColormapSize"]], "getcolormapvisible() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getColormapVisible"]], "getrgbwave() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.getRGBWave"]], "lys.widgets.canvas.interface.rgb": [[25, "module-lys.widgets.canvas.interface.RGB"]], "setcolorrange() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.setColorRange"]], "setcolorrotation() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.setColorRotation"]], "setcolormapposition() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.setColormapPosition"]], "setcolormapsize() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.setColormapSize"]], "setcolormapvisible() (lys.widgets.canvas.interface.rgb.rgbdata method)": [[25, "lys.widgets.canvas.interface.RGB.RGBData.setColormapVisible"]], "rectannotation (class in lys.widgets.canvas.interface.rectannotation)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation"]], "getposition() (lys.widgets.canvas.interface.rectannotation.rectannotation method)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation.getPosition"]], "getregion() (lys.widgets.canvas.interface.rectannotation.rectannotation method)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation.getRegion"]], "getsize() (lys.widgets.canvas.interface.rectannotation.rectannotation method)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation.getSize"]], "lys.widgets.canvas.interface.rectannotation": [[26, "module-lys.widgets.canvas.interface.RectAnnotation"]], "regionchanged (lys.widgets.canvas.interface.rectannotation.rectannotation attribute)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation.regionChanged"]], "setregion() (lys.widgets.canvas.interface.rectannotation.rectannotation method)": [[26, "lys.widgets.canvas.interface.RectAnnotation.RectAnnotation.setRegion"]], "freeregionannotation (class in lys.widgets.canvas.interface.regionannotation)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation"]], "regionannotation (class in lys.widgets.canvas.interface.regionannotation)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation"]], "getorientation() (lys.widgets.canvas.interface.regionannotation.regionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation.getOrientation"]], "getregion() (lys.widgets.canvas.interface.regionannotation.freeregionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.getRegion"]], "getregion() (lys.widgets.canvas.interface.regionannotation.regionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation.getRegion"]], "getwidth() (lys.widgets.canvas.interface.regionannotation.freeregionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.getWidth"]], "lys.widgets.canvas.interface.regionannotation": [[27, "module-lys.widgets.canvas.interface.RegionAnnotation"]], "regionchanged (lys.widgets.canvas.interface.regionannotation.freeregionannotation attribute)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.regionChanged"]], "regionchanged (lys.widgets.canvas.interface.regionannotation.regionannotation attribute)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation.regionChanged"]], "setregion() (lys.widgets.canvas.interface.regionannotation.freeregionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.setRegion"]], "setregion() (lys.widgets.canvas.interface.regionannotation.regionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.RegionAnnotation.setRegion"]], "setwidth() (lys.widgets.canvas.interface.regionannotation.freeregionannotation method)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.setWidth"]], "widthchanged (lys.widgets.canvas.interface.regionannotation.freeregionannotation attribute)": [[27, "lys.widgets.canvas.interface.RegionAnnotation.FreeRegionAnnotation.widthChanged"]], "textannotation (class in lys.widgets.canvas.interface.textannotation)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation"]], "edited (lys.widgets.canvas.interface.textannotation.textannotation attribute)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.edited"]], "getboxcolor() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getBoxColor"]], "getboxstyle() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getBoxStyle"]], "getfont() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getFont"]], "getposition() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getPosition"]], "gettext() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getText"]], "gettransform() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.getTransform"]], "lys.widgets.canvas.interface.textannotation": [[28, "module-lys.widgets.canvas.interface.TextAnnotation"]], "setboxcolor() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setBoxColor"]], "setboxstyle() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setBoxStyle"]], "setfont() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setFont"]], "setposition() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setPosition"]], "settext() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setText"]], "settransform() (lys.widgets.canvas.interface.textannotation.textannotation method)": [[28, "lys.widgets.canvas.interface.TextAnnotation.TextAnnotation.setTransform"]], "vectordata (class in lys.widgets.canvas.interface.vector)": [[29, "lys.widgets.canvas.interface.Vector.VectorData"]], "getautoscale() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.getAutoScale"]], "getcolor() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.getColor"]], "getpivot() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.getPivot"]], "getscale() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.getScale"]], "getwidth() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.getWidth"]], "lys.widgets.canvas.interface.vector": [[29, "module-lys.widgets.canvas.interface.Vector"]], "setcolor() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.setColor"]], "setpivot() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.setPivot"]], "setscale() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.setScale"]], "setwidth() (lys.widgets.canvas.interface.vector.vectordata method)": [[29, "lys.widgets.canvas.interface.Vector.VectorData.setWidth"]], "wavedata (class in lys.widgets.canvas.interface.wavedata)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData"]], "getaxis() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getAxis"]], "getfilter() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getFilter"]], "getfilteredwave() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getFilteredWave"]], "getname() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getName"]], "getoffset() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getOffset"]], "getvisible() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getVisible"]], "getwave() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getWave"]], "getzorder() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.getZOrder"]], "loadappearance() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.loadAppearance"]], "lys.widgets.canvas.interface.wavedata": [[30, "module-lys.widgets.canvas.interface.WaveData"]], "modified (lys.widgets.canvas.interface.wavedata.wavedata attribute)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.modified"]], "saveappearance() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.saveAppearance"]], "setfilter() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.setFilter"]], "setname() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.setName"]], "setoffset() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.setOffset"]], "setvisible() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.setVisible"]], "setzorder() (lys.widgets.canvas.interface.wavedata.wavedata method)": [[30, "lys.widgets.canvas.interface.WaveData.WaveData.setZOrder"]], "axesrangemanager (class in lys.mcut.multicutcui)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager"]], "canvasmanager (class in lys.mcut.canvasmanager)": [[31, "lys.mcut.CanvasManager.CanvasManager"]], "childwaves (class in lys.mcut.multicutcui)": [[31, "lys.mcut.MultiCutCUI.ChildWaves"]], "freelinemanager (class in lys.mcut.multicutcui)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager"]], "multicut (class in lys.mcut.multicutgui)": [[31, "lys.mcut.MultiCutGUI.MultiCut"]], "multicutcui (class in lys.mcut.multicutcui)": [[31, "lys.mcut.MultiCutCUI.MultiCutCUI"]], "multicutwave (class in lys.mcut.multicutcui)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave"]], "addannotations() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addAnnotations"]], "addcross() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addCross"]], "addfreeline() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addFreeLine"]], "addfreeline() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.addFreeLine"]], "addline() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addLine"]], "addrect() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addRect"]], "addregion() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.addRegion"]], "addwave() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.addWave"]], "applyfilter() (lys.mcut.multicutcui.multicutwave method)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.applyFilter"]], "axesrangechanged (lys.mcut.multicutcui.axesrangemanager attribute)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.axesRangeChanged"]], "childwaveschanged (lys.mcut.multicutcui.childwaves attribute)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.childWavesChanged"]], "clear() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.clear"]], "clear() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.clear"]], "clear() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.clear"]], "closed (lys.mcut.multicutgui.multicut attribute)": [[31, "lys.mcut.MultiCutGUI.MultiCut.closed"]], "createcanvas() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.createCanvas"]], "cui (lys.mcut.multicutcui.childwaves property)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.cui"]], "cui (lys.mcut.multicutgui.multicut property)": [[31, "lys.mcut.MultiCutGUI.MultiCut.cui"]], "dimensionchanged (lys.mcut.multicutcui.multicutwave attribute)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.dimensionChanged"]], "display() (lys.mcut.multicutgui.multicut method)": [[31, "lys.mcut.MultiCutGUI.MultiCut.display"]], "filterapplied (lys.mcut.multicutcui.multicutwave attribute)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.filterApplied"]], "freelinechanged (lys.mcut.multicutcui.freelinemanager attribute)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.freeLineChanged"]], "freelinemoved (lys.mcut.multicutcui.freelinemanager attribute)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.freeLineMoved"]], "getannotations() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.getAnnotations"]], "getaxisrange() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.getAxisRange"]], "getaxisrangetype() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.getAxisRangeType"]], "getchildwaves() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.getChildWaves"]], "getfilteredwave() (lys.mcut.multicutcui.multicutwave method)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.getFilteredWave"]], "getfreeline() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.getFreeLine"]], "getfreelines() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.getFreeLines"]], "getrawwave() (lys.mcut.multicutcui.multicutwave method)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.getRawWave"]], "interactivewidget() (lys.mcut.canvasmanager.canvasmanager method)": [[31, "lys.mcut.CanvasManager.CanvasManager.interactiveWidget"]], "loadfromdictionary() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.loadFromDictionary"]], "loadfromdictionary() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.loadFromDictionary"]], "loadfromdictionary() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.loadFromDictionary"]], "loadfromdictionary() (lys.mcut.multicutcui.multicutcui method)": [[31, "lys.mcut.MultiCutCUI.MultiCutCUI.loadFromDictionary"]], "loadfromdictionary() (lys.mcut.multicutgui.multicut method)": [[31, "lys.mcut.MultiCutGUI.MultiCut.loadFromDictionary"]], "lys.mcut.canvasmanager": [[31, "module-lys.mcut.CanvasManager"]], "lys.mcut.multicutgui": [[31, "module-lys.mcut.MultiCutGUI"]], "openmulticutsetting() (lys.mcut.multicutgui.multicut method)": [[31, "lys.mcut.MultiCutGUI.MultiCut.openMultiCutSetting"]], "remove() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.remove"]], "removefreeline() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.removeFreeLine"]], "reset() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.reset"]], "saveasdictionary() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.saveAsDictionary"]], "saveasdictionary() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.saveAsDictionary"]], "saveasdictionary() (lys.mcut.multicutcui.freelinemanager method)": [[31, "lys.mcut.MultiCutCUI.FreeLineManager.saveAsDictionary"]], "saveasdictionary() (lys.mcut.multicutcui.multicutcui method)": [[31, "lys.mcut.MultiCutCUI.MultiCutCUI.saveAsDictionary"]], "saveasdictionary() (lys.mcut.multicutgui.multicut method)": [[31, "lys.mcut.MultiCutGUI.MultiCut.saveAsDictionary"]], "setaxisrange() (lys.mcut.multicutcui.axesrangemanager method)": [[31, "lys.mcut.MultiCutCUI.AxesRangeManager.setAxisRange"]], "setsumtype() (lys.mcut.multicutcui.childwaves method)": [[31, "lys.mcut.MultiCutCUI.ChildWaves.setSumType"]], "usedask() (lys.mcut.multicutcui.multicutwave method)": [[31, "lys.mcut.MultiCutCUI.MultiCutWave.useDask"]], "axesselectiondialog (class in lys.widgets.general)": [[32, "lys.widgets.general.AxesSelectionDialog"]], "axischecklayout (class in lys.widgets.general)": [[32, "lys.widgets.general.AxisCheckLayout"]], "axisselectionlayout (class in lys.widgets.general)": [[32, "lys.widgets.general.AxisSelectionLayout"]], "colorselection (class in lys.widgets.general)": [[32, "lys.widgets.general.ColorSelection"]], "colormapselection (class in lys.widgets.general)": [[32, "lys.widgets.general.ColormapSelection"]], "getchecked() (lys.widgets.general.axischecklayout method)": [[32, "lys.widgets.general.AxisCheckLayout.GetChecked"]], "indiceselectionlayout (class in lys.widgets.general)": [[32, "lys.widgets.general.IndiceSelectionLayout"]], "regionselectwidget (class in lys.widgets.general)": [[32, "lys.widgets.general.RegionSelectWidget"]], "scientificspinbox (class in lys.widgets.general)": [[32, "lys.widgets.general.ScientificSpinBox"]], "setchecked() (lys.widgets.general.axischecklayout method)": [[32, "lys.widgets.general.AxisCheckLayout.SetChecked"]], "axischanged (lys.widgets.general.axisselectionlayout attribute)": [[32, "lys.widgets.general.AxisSelectionLayout.axisChanged"]], "colorchanged (lys.widgets.general.colorselection attribute)": [[32, "lys.widgets.general.ColorSelection.colorChanged"]], "colorchanged (lys.widgets.general.colormapselection attribute)": [[32, "lys.widgets.general.ColormapSelection.colorChanged"]], "currentcolor() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.currentColor"]], "currentcolormaps() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.currentColorMaps"]], "gamma() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.gamma"]], "getaxes() (lys.widgets.general.axesselectiondialog method)": [[32, "lys.widgets.general.AxesSelectionDialog.getAxes"]], "getaxis() (lys.widgets.general.axisselectionlayout method)": [[32, "lys.widgets.general.AxisSelectionLayout.getAxis"]], "getchecked() (lys.widgets.general.regionselectwidget method)": [[32, "lys.widgets.general.RegionSelectWidget.getChecked"]], "getcolor() (lys.widgets.general.colorselection method)": [[32, "lys.widgets.general.ColorSelection.getColor"]], "getcolorasarray() (lys.widgets.general.colorselection method)": [[32, "lys.widgets.general.ColorSelection.getColorAsArray"]], "getindices() (lys.widgets.general.indiceselectionlayout method)": [[32, "lys.widgets.general.IndiceSelectionLayout.getIndices"]], "getkernelsigma() (lys.widgets.general.kernelsigmalayout method)": [[32, "lys.widgets.general.kernelSigmaLayout.getKernelSigma"]], "getkernelsize() (lys.widgets.general.kernelsizelayout method)": [[32, "lys.widgets.general.kernelSizeLayout.getKernelSize"]], "getregion() (lys.widgets.general.regionselectwidget method)": [[32, "lys.widgets.general.RegionSelectWidget.getRegion"]], "islog() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.isLog"]], "kernelsigmalayout (class in lys.widgets.general)": [[32, "lys.widgets.general.kernelSigmaLayout"]], "kernelsizelayout (class in lys.widgets.general)": [[32, "lys.widgets.general.kernelSizeLayout"]], "lys.widgets": [[32, "module-lys.widgets"]], "lys.widgets.general": [[32, "module-lys.widgets.general"]], "opacity() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.opacity"]], "setaxis() (lys.widgets.general.axisselectionlayout method)": [[32, "lys.widgets.general.AxisSelectionLayout.setAxis"]], "setchecked() (lys.widgets.general.regionselectwidget method)": [[32, "lys.widgets.general.RegionSelectWidget.setChecked"]], "setcolor() (lys.widgets.general.colorselection method)": [[32, "lys.widgets.general.ColorSelection.setColor"]], "setcolormap() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.setColormap"]], "setdimension() (lys.widgets.general.axesselectiondialog method)": [[32, "lys.widgets.general.AxesSelectionDialog.setDimension"]], "setdimension() (lys.widgets.general.axisselectionlayout method)": [[32, "lys.widgets.general.AxisSelectionLayout.setDimension"]], "setenabled() (lys.widgets.general.axisselectionlayout method)": [[32, "lys.widgets.general.AxisSelectionLayout.setEnabled"]], "setenabled() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.setEnabled"]], "setenabled() (lys.widgets.general.indiceselectionlayout method)": [[32, "lys.widgets.general.IndiceSelectionLayout.setEnabled"]], "setgamma() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.setGamma"]], "setkernelsigma() (lys.widgets.general.kernelsigmalayout method)": [[32, "lys.widgets.general.kernelSigmaLayout.setKernelSigma"]], "setkernelsize() (lys.widgets.general.kernelsizelayout method)": [[32, "lys.widgets.general.kernelSizeLayout.setKernelSize"]], "setlog() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.setLog"]], "setopacity() (lys.widgets.general.colormapselection method)": [[32, "lys.widgets.general.ColormapSelection.setOpacity"]], "setregion() (lys.widgets.general.regionselectwidget method)": [[32, "lys.widgets.general.RegionSelectWidget.setRegion"]], "setshape() (lys.widgets.general.indiceselectionlayout method)": [[32, "lys.widgets.general.IndiceSelectionLayout.setShape"]], "setvalues() (lys.widgets.general.indiceselectionlayout method)": [[32, "lys.widgets.general.IndiceSelectionLayout.setValues"]], "statechanged (lys.widgets.general.axischecklayout attribute)": [[32, "lys.widgets.general.AxisCheckLayout.stateChanged"]], "statechanged (lys.widgets.general.regionselectwidget attribute)": [[32, "lys.widgets.general.RegionSelectWidget.stateChanged"]], "stepby() (lys.widgets.general.scientificspinbox method)": [[32, "lys.widgets.general.ScientificSpinBox.stepBy"]], "textfromvalue() (lys.widgets.general.scientificspinbox method)": [[32, "lys.widgets.general.ScientificSpinBox.textFromValue"]], "validate() (lys.widgets.general.scientificspinbox method)": [[32, "lys.widgets.general.ScientificSpinBox.validate"]], "valuechanged (lys.widgets.general.indiceselectionlayout attribute)": [[32, "lys.widgets.general.IndiceSelectionLayout.valueChanged"]], "valuefromtext() (lys.widgets.general.scientificspinbox method)": [[32, "lys.widgets.general.ScientificSpinBox.valueFromText"]], "filesystemview (class in lys.widgets.fileview)": [[33, "lys.widgets.fileView.FileSystemView"]], "lys.widgets.fileview": [[33, "module-lys.widgets.fileView"]], "registerfilemenu() (lys.widgets.fileview.filesystemview method)": [[33, "lys.widgets.fileView.FileSystemView.registerFileMenu"]], "selectedpath() (lys.widgets.fileview.filesystemview method)": [[33, "lys.widgets.fileView.FileSystemView.selectedPath"]], "selectedpaths() (lys.widgets.fileview.filesystemview method)": [[33, "lys.widgets.fileView.FileSystemView.selectedPaths"]], "selectionchanged (lys.widgets.fileview.filesystemview attribute)": [[33, "lys.widgets.fileView.FileSystemView.selectionChanged"]], "setpath() (lys.widgets.fileview.filesystemview method)": [[33, "lys.widgets.fileView.FileSystemView.setPath"]], "lyssubwindow (class in lys.widgets.mdi)": [[34, "lys.widgets.mdi.LysSubWindow"]], "attach() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.attach"]], "attachto() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.attachTo"]], "closeevent() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.closeEvent"]], "closed (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.closed"]], "eventfilter() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.eventFilter"]], "focused (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.focused"]], "isfloating() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.isFloating"]], "loaded (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.loaded"]], "lys.widgets.mdi": [[34, "module-lys.widgets.mdi"]], "moveevent() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.moveEvent"]], "movefinished (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.moveFinished"]], "moved (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.moved"]], "resizeevent() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.resizeEvent"]], "resizefinished (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.resizeFinished"]], "resized (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.resized"]], "restoresettings() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.restoreSettings"]], "savesettings() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.saveSettings"]], "saved (lys.widgets.mdi.lyssubwindow attribute)": [[34, "lys.widgets.mdi.LysSubWindow.saved"]], "setsettingfile() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.setSettingFile"]], "settitlecolor() (lys.widgets.mdi.lyssubwindow method)": [[34, "lys.widgets.mdi.LysSubWindow.setTitleColor"]], "titlecolor (lys.widgets.mdi.lyssubwindow property)": [[34, "lys.widgets.mdi.LysSubWindow.titleColor"]], "tabledata (class in lys.widgets.table.data)": [[35, "lys.widgets.table.Data.TableData"]], "closeevent() (lys.widgets.table.lystable.lystable method)": [[35, "lys.widgets.table.lysTable.lysTable.closeEvent"]], "datachanged (lys.widgets.table.data.tabledata attribute)": [[35, "lys.widgets.table.Data.TableData.dataChanged"]], "datasaved (lys.widgets.table.data.tabledata attribute)": [[35, "lys.widgets.table.Data.TableData.dataSaved"]], "finalized (lys.widgets.table.lystable.lystable attribute)": [[35, "lys.widgets.table.lysTable.lysTable.finalized"]], "getdata() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.getData"]], "getslice() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.getSlice"]], "getsliceddata() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.getSlicedData"]], "keypressevent() (lys.widgets.table.lystable.lystable method)": [[35, "lys.widgets.table.lysTable.lysTable.keyPressEvent"]], "keypressed (lys.widgets.table.lystable.lystable attribute)": [[35, "lys.widgets.table.lysTable.lysTable.keyPressed"]], "loadfromdictionary() (lys.widgets.table.lystable.lystable method)": [[35, "lys.widgets.table.lysTable.lysTable.loadFromDictionary"]], "loadtable (lys.widgets.table.lystable.lystable attribute)": [[35, "lys.widgets.table.lysTable.lysTable.loadTable"]], "lys.widgets.table.data": [[35, "module-lys.widgets.table.Data"]], "lys.widgets.table.lystable": [[35, "module-lys.widgets.table.lysTable"]], "lystable (class in lys.widgets.table.lystable)": [[35, "lys.widgets.table.lysTable.lysTable"]], "openmodifywindow() (lys.widgets.table.lystable.lystable method)": [[35, "lys.widgets.table.lysTable.lysTable.openModifyWindow"]], "save() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.save"]], "saveasdictionary() (lys.widgets.table.lystable.lystable method)": [[35, "lys.widgets.table.lysTable.lysTable.saveAsDictionary"]], "savetable (lys.widgets.table.lystable.lystable attribute)": [[35, "lys.widgets.table.lysTable.lysTable.saveTable"]], "setdata() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.setData"]], "setslice() (lys.widgets.table.data.tabledata method)": [[35, "lys.widgets.table.Data.TableData.setSlice"]], "updated (lys.widgets.table.data.tabledata attribute)": [[35, "lys.widgets.table.Data.TableData.updated"]]}})